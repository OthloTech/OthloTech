<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs-rsses on OthloTech -学生クリエイティブ集団-</title>
    <link>http://www.othlo.tech/blogs/index.xml</link>
    <description>Recent content in Blogs-rsses on OthloTech -学生クリエイティブ集団-</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 OthloTech. All rights reserved. Crafted with love</copyright>
    <lastBuildDate>Thu, 03 Nov 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.othlo.tech/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ライトニングトークを面白くするたった3つのテクニック</title>
      <link>http://www.othlo.tech/blogs/lightning_talks_technique/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.othlo.tech/blogs/lightning_talks_technique/</guid>
      <description>

&lt;h1 id=&#34;ライトニングトーク-lt-を面白くするたった3つのテクニック&#34;&gt;ライトニングトーク（LT）を面白くするたった3つのテクニック&lt;/h1&gt;

&lt;p&gt;こんにちは(○´∀｀)ﾉﾞ&lt;br /&gt;
OthloTech初のブログを書くのは私、オトモレ(&lt;a href=&#34;https://twitter.com/otomore01&#34;&gt;@otomore01&lt;/a&gt;)でございます。&lt;br /&gt;
↓ある日のSlack↓&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slack_screenshot.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ある日のSlack&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;ということで、記念すべき第1稿に任命されました。&lt;strong&gt;光栄です！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今回のお題はこれでいきます。
&lt;br/&gt;&lt;br/&gt;
&lt;div style=&#34;text-align: center;font-size: xx-large; font-weight: bold; color: red&#34;&gt;「お前らのLTはつまらん」&lt;/div&gt;
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;初っ端からキツい内容でアレなんですが…… &lt;strong&gt;聞くに堪えないLTって正直少なくないですよね？&lt;/strong&gt;&lt;br /&gt;
せっかく面白いネタがあるのに、面白く伝えないと聞いてもらえないし伝わりません。&lt;br /&gt;
もったいない (´；ω；`)&lt;/p&gt;

&lt;p&gt;でも大丈夫。&lt;br /&gt;
&lt;strong&gt;あなたのライトニングトークを面白くするテクニックを伝授します！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-フォントサイズをギリギリまでデカくしろ&#34;&gt;1. フォントサイズをギリギリまでデカくしろ&lt;/h2&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/font-size_mini.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;フォントサイズ小&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは、頭では分かっていてもやりがちな間違い。&lt;br /&gt;
登壇者が好きなことほど、細かい部分まで書きたくなるものですが&lt;strong&gt;そんなの誰も読まない&lt;/strong&gt;んですよ。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/font-size_big.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;フォントサイズ大&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;ついでにスライドサイズも変えておきましょう&#34;&gt;ついでにスライドサイズも変えておきましょう&lt;/h3&gt;

&lt;p&gt;せっかく文字をデカくしたのに、スクリーン(ディスプレイ)の端が余ってるのはモッタイナイ！&lt;br /&gt;
スクリーンのサイズ（厳密にはアスペクト比）は「4:3」か「16:9」の2つがほとんどです。&lt;br /&gt;
会場のスクリーンについて調べておくか、わからなければ両方作っておくのが良いでしょう。&lt;/p&gt;

&lt;h2 id=&#34;2-ボケろ&#34;&gt;2. ボケろ&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;LTは漫才に似ています。&lt;/strong&gt; いやもう&lt;strong&gt;「
LT == 漫才」&lt;/strong&gt;で Q.E.D. です。&lt;br /&gt;
おっとw 拙者ついクセで = (イコール) を2つ並べてしまったでござるﾃﾞｭﾌﾌww&lt;/p&gt;

&lt;p&gt;面白いLTとは登壇者がボケ、聴衆が(心のなかで)ツッコミを入れることにより化学反応が起き笑いが生まれているのです。&lt;br /&gt;
いきなり「ボケろ」と言われても難しいと思うので、いくつか例をご紹介します。&lt;/p&gt;

&lt;h3 id=&#34;画像でボケろ&#34;&gt;画像でボケろ&lt;/h3&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slide-24.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;時間が足りないとき&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは「時間が足りないときってありますよね」などと話しながら見せるスライド。&lt;br /&gt;
ドラマ「24」のように有名なドラマだと、見たことない人でも&lt;strong&gt;時間が足りないことだけは何となくわかった気持ち&lt;/strong&gt;になります。&lt;/p&gt;

&lt;p&gt;次は少しレベルが高いかもしれません。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slide-kaba.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;GABAの話をするとき&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは「みなさんGABA(ギャバ)って知ってますか？」と話す場面です。&lt;br /&gt;
説明するまでもありませんが「GABA(ギャバ)」と「KABA(カバ)」をかけたダジャレです。&lt;br /&gt;
ただしこれは、&lt;strong&gt;一歩間違えると寒いオヤジギャグで終わることも有り得る&lt;/strong&gt;ので使い所が肝心です。&lt;/p&gt;

&lt;p&gt;例に挙げたスライドは、分かりやすくするため文字を入れました。&lt;br /&gt;
本来ならば画像を全体に広げるほうがいいでしょう。&lt;/p&gt;

&lt;h3 id=&#34;何度もボケろ&#34;&gt;何度もボケろ&lt;/h3&gt;

&lt;p&gt;たとえオヤジギャグでも、何度も同じボケをするのは意外と有効です。&lt;br /&gt;
何故ならば、&lt;strong&gt;同じボケを続けることにより「聴衆が笑いどころを理解する」から&lt;/strong&gt;です。&lt;br /&gt;
例えるなら&lt;strong&gt;「バラエティ番組のスタッフの笑い声」と同じ&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;1度目2度目はウケなくてつらいかもしれませんが、見ている人に「ここがおもしろいんじゃ」と伝えてください。&lt;br /&gt;
3度目には会場全体から大爆笑を攫うことでしょう。(保証はしません)&lt;/p&gt;

&lt;h3 id=&#34;オチを作れ&#34;&gt;オチを作れ&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;「終わり良ければすべて良し」&lt;/strong&gt;です。&lt;br /&gt;
最後の終わらせ方が上手くないと、それまでどれほど面白いLTをしていても評価が下がります。&lt;/p&gt;

&lt;p&gt;オチの作り方は多種多様です。&lt;br /&gt;
「三段オチ」や「起承転結」「伏線回収」を取り入れるといいでしょう。&lt;/p&gt;

&lt;p&gt;また、必ずしも笑いを取る必要はありません。&lt;br /&gt;
例えば、感動オチ（例：紆余曲折を経て解決する、とか）は聴衆からの共感を得るのに最適でしょう。&lt;/p&gt;

&lt;p&gt;ネタを伝えてどのような感想を与えたいかによって変えてみて下さい。&lt;br /&gt;
「LTは漫才に似ています 」と書きましたが [漫才 オチ] などでググると参考になる資料と出会えます。&lt;/p&gt;

&lt;h2 id=&#34;3-練習しろ&#34;&gt;3. 練習しろ&lt;/h2&gt;

&lt;p&gt;ここまでスライドの作り方ばかりお伝えしてきましたが、最終的には練習あるのみです。&lt;br /&gt;
練習のときに気をつけるポイントは4つ。&lt;/p&gt;

&lt;h3 id=&#34;機材のチェック&#34;&gt;機材のチェック&lt;/h3&gt;

&lt;p&gt;本番前に、ディスプレイまたはプロジェクタのコネクタを確認しておきましょう。&lt;br /&gt;
持ち合わせがなかったり忘れてしまった場合は、前後の人や主催者にお願いして借りるアテをつけておきましょう。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/tanshi_dsub.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;VGA端子&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;時間配分&#34;&gt;時間配分&lt;/h3&gt;

&lt;p&gt;LTの時間はほとんどが5分、もしくは10分です。&lt;br /&gt;
主催者視点からいうと、短く終わる場合は大歓迎。&lt;br /&gt;
&lt;strong&gt;時間を超えるとはっきり言って迷惑&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;PowerPointやKeynoteの発表者ツールには、スライドショー開始時からの経過時間が表示できます。&lt;br /&gt;
チラっと見て、余裕がなければ早口で話すのもテクニックです。&lt;/p&gt;

&lt;p&gt;練習時は30秒くらい早めに終わるのがいいでしょう。&lt;br /&gt;
聴衆のリアクションの時間、例えば拍手喝采が起きたらその間はスライドを止めておくはずです。&lt;/p&gt;

&lt;h3 id=&#34;聴衆を見て話す&#34;&gt;聴衆を見て話す&lt;/h3&gt;

&lt;p&gt;スライドやPCを見ながら話す人、たまにいますよね。
きっと&lt;strong&gt;「あーん？？お前は誰にプレゼンしてるんだ？？？スクリーンか？？？？」&lt;/strong&gt;と聴衆は感じるはずです。&lt;/p&gt;

&lt;p&gt;聴衆の目を見て話すだけで、「やっべ、見なきゃ！」という気持ちになります。（言うほど簡単じゃないんですけどね。）&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/presentation_pc_man_eye.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;聴衆の目を見る&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;口癖に気をつける&#34;&gt;口癖に気をつける&lt;/h3&gt;

&lt;p&gt;次のセリフをロードする間「あのー」「えーと」などと垂れ流してしまうそこのアナタ！&lt;br /&gt;
これらを&lt;strong&gt;1回使う度に、そのプレゼンの説得力は半減すると言います。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;逆に言えば、&lt;strong&gt;1回「えーと」を減らせば説得力は倍になります！&lt;/strong&gt;&lt;br /&gt;
これらの口癖を言ってしまうのには色々原因があるのですが、大抵は「単なる練習不足」です。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;さあ、練習あるのみ！&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;〆&#34;&gt;〆&lt;/h3&gt;

&lt;p&gt;いかがでしたか？&lt;br /&gt;
僕は「プレゼン」と「ライトニングトーク」は別モノだと思っています。&lt;/p&gt;

&lt;p&gt;プレゼンで使うテクニックの中には、ライトニングトークだと逆効果のものもあります。（もちろん使えるものもあります:D）&lt;br /&gt;
いろんな人のLTを見て研究するも良し、慣れてきたら自分のオリジナリティを加えていくも良し。&lt;/p&gt;

&lt;p&gt;いきなり全部は難しいかもしれません、ひとつずつ試していきましょう。&lt;br /&gt;
これでアナタもライトニングトークマスターになれるはずです！&lt;/p&gt;

&lt;div style=&#34;text-align: center;font-size: xx-large; font-weight: bold&#34;&gt;どうだい？ LTしたくなってきただろう？&lt;/div&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/message_goseichou_man.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ご清聴ありがとうございました&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Hugo&#43;GithubPagesでサイトをリニューアル</title>
      <link>http://www.othlo.tech/blogs/hugo&#43;github-pages/</link>
      <pubDate>Sun, 23 Oct 2016 02:45:17 +0900</pubDate>
      
      <guid>http://www.othlo.tech/blogs/hugo&#43;github-pages/</guid>
      <description>

&lt;h1 id=&#34;hugo-githubpages-で公式サイトを作り直したお話&#34;&gt;Hugo + GithubPages で公式サイトを作り直したお話&lt;/h1&gt;

&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/hyde141421356&#34;&gt;@pokohide&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;この度、OthloTechの公式サイトをリニューアルしました。過去のサイトは&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サーバーサイド&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Material UI&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CSSフレームワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Heroku&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PaaS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;gulp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;タスクランナー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ect&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;テンプレートエンジン&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;サーバーサイドも自前で作っておけば何か機能を追加したいと思ったときに対応できるかなと、サーバーサイドも書いていたのですが
当分は必要にならないだろうという理由と、動作に不調があったので、乗り換えることにしました。&lt;/p&gt;

&lt;p&gt;リニューアルする目的としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マークダウンで記事が書ける&lt;/li&gt;
&lt;li&gt;保守が楽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この条件から、今回は &lt;code&gt;Hugo&lt;/code&gt; と &lt;code&gt;GitHub Pages&lt;/code&gt; で構成しました。&lt;/p&gt;

&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/banners/blogs/hugo.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;Hugo&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;はGo言語で動いている静的サイトジェネレーターで静的な&lt;code&gt;html&lt;/code&gt;を生成することができます。静的サイトジェネレーターは他にも
&lt;code&gt;Jekyll&lt;/code&gt;や&lt;code&gt;Hexo&lt;/code&gt;など他にも色々あったのですが、なんとなくで今回は&lt;code&gt;Hugo&lt;/code&gt;を選びました。&lt;/p&gt;

&lt;p&gt;一応特徴としては、記事の生成が高速らしく、他のブログから参照したのが以下の表。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;記事数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Octopress&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hexo&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Pelican&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Gitbook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Jekyll&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hugo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.86&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.98&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.96&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.64&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.03&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.94&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.79&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;25.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;14.61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.34&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.82&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://tamura.goga.co.jp/article/429818193.html&#34;&gt;静的サイトジェネレータの生成時間比較&lt;/a&gt; より&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1000記事の生成ともなると、違いがわかるほどの速いことがわかります。まぁ1000記事まで貯まるまでには何年かかるかわからないですけどね。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;のテーマはここにあるので、これを参考にして作るか自作するかどちらでもいいでしょう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;GitHub Pages&lt;/code&gt;はGitHubのサービスのひとつで、GitHub上のリポジトリにあるコンテンツを利用してWEBページとして公開できるホスティングサービスです。
静的ページ、静的コンテンツのみを公開できるので&lt;code&gt;Node.js&lt;/code&gt;や&lt;code&gt;PHP&lt;/code&gt;などで動的ページの生成などはできません。&lt;/p&gt;

&lt;p&gt;あと無料∩(ﾟ∀ﾟ∩)&lt;/p&gt;

&lt;p&gt;詳細は&lt;a href=&#34;https://github.com/blog/2228-simpler-github-pages-publishing&#34;&gt;本家&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;h2 id=&#34;サイトつくろー&#34;&gt;サイトつくろー&lt;/h2&gt;

&lt;p&gt;雑ですが、Hugoの導入からテンプレートを使ってサイトを作るまでの流れは以下のリンクを参考にしてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/syui/items/869538099551f24acbbf&#34;&gt;http://qiita.com/syui/items/869538099551f24acbbf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マークダウンで記事とかを書くときは&lt;code&gt;Shortcode&lt;/code&gt;を使うといいですよ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/waytoa/items/4107945cbd3883f51755&#34;&gt;http://qiita.com/waytoa/items/4107945cbd3883f51755&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;デプロイの流れ&#34;&gt;デプロイの流れ&lt;/h2&gt;

&lt;p&gt;今回はOthloTechの組織アカウントでOthloTechというレポジトリを作って開発を行っていました。&lt;/p&gt;

&lt;p&gt;GitHub Pagesには2種類の方法があって、グループページという&lt;code&gt;アカウント名.github.io&lt;/code&gt;というレポジトリのmasterブランチを反映する方法と
プロジェクトページといって、適当なレポジトリの&lt;code&gt;gh-pages&lt;/code&gt;ブランチを&lt;code&gt;http://アカウント名.github.io/リポジトリ名/&lt;/code&gt;に反映する方法があります。&lt;/p&gt;

&lt;p&gt;※ 最近ではどのブランチを反映するかを設定できるみたいです。ただ今回は通例に従って&lt;code&gt;gh-pages&lt;/code&gt;ブランチをデプロイブランチにすることにします。&lt;/p&gt;

&lt;p&gt;今回は後者の方法で実装するので、&lt;code&gt;gh-pages&lt;/code&gt;にデプロイする流れを説明して終わりにします。流れとしては、同じレポジトリのあるサブディレクトリの中身を
別ブランチに&lt;code&gt;push&lt;/code&gt;する方法をとります。&lt;/p&gt;

&lt;p&gt;そのために&lt;a href=&#34;https://git-scm.com/docs/git-worktree&#34;&gt;git-worktree&lt;/a&gt;を使います。&lt;code&gt;git-worktree&lt;/code&gt;を使うと指定のブランチをサブディレクトリ以下にチェックアウト
することができるので、作業用のブランチと公開用の&lt;code&gt;gh-pages&lt;/code&gt;ブランチを切り替えずに同時に編集できるようになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -d pages # pagesディレクトリにコンテンツを生成する。(デフォルトだとpublicフォルダ)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドでコンテンツをpagesフォルダに生成できるので、このディレクトリの中身を&lt;code&gt;gh-pages&lt;/code&gt;にプッシュします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout master
git worktree add pages gh-pages # pagesがブランチをチェックアウトするディレクトリ名、gh-pagesが取り込むブランチ名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでgh-pagesブランチにpagesディレクトリ以下がプッシュされます。しかし、この方法だとコンテンツを消した際に再び&lt;code&gt;hugo -d pages&lt;/code&gt;と
コマンドを打っても、過去の記事が&lt;code&gt;pages&lt;/code&gt;フォルダから消えずに残ったままになります。&lt;/p&gt;

&lt;p&gt;なので、過去の記事を消して、記事を再生成して、デプロイするのをシェルを書いて楽します。&lt;/p&gt;

&lt;h5 id=&#34;deploy-sh&#34;&gt;deploy.sh&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

# pagesフォルダの ., .., .git 以外を消去
ls -la pages | grep -v -E &#39;.|.git$&#39; | xargs rm -rf

# deploy用のファイルを生成
hugo -d pages

# deploy
cd pages
git add .
git commit -m &#39;updated by deploy.sh&#39;
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;chmod 755 deploy.sh # 実行権限を与える
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これであとは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デプロイできます。ハッピー。&lt;/p&gt;

&lt;h3 id=&#34;ドメイン設定&#34;&gt;ドメイン設定&lt;/h3&gt;

&lt;p&gt;こうして公開したサイトに独自ドメインを設定して、 &lt;a href=&#34;http://www.othlo.tech&#34;&gt;OthloTechの公式サイト&lt;/a&gt;としました。&lt;/p&gt;

&lt;p&gt;そのあたりはここを参考するとわかりやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&#34;&gt;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;さいごに&#34;&gt;さいごに&lt;/h3&gt;

&lt;p&gt;せっかくリニューアルしたので、イベントレポートやブログを書いていこうと思います！&lt;/p&gt;

&lt;p&gt;一応作業のフローはプルリクベースで文章の校正などを見て、メンバーのLGTMが2つ以上ついたらマージ可能にするという体制で&lt;/p&gt;

&lt;p&gt;記事の更新もしていこうと思っているので、そのあたりもまとまってきたらまた記事にしたいと思いますー！&lt;/p&gt;

&lt;p&gt;これからもOthloTechをよろしくお願いしますo(*⌒─⌒*)o&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>