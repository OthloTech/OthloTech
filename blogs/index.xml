<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs-rsses on OthloTech -学生クリエイティブ集団-</title>
    <link>http://www.othlo.tech/blogs/index.xml</link>
    <description>Recent content in Blogs-rsses on OthloTech -学生クリエイティブ集団-</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 OthloTech. All rights reserved. Crafted with love</copyright>
    <lastBuildDate>Thu, 24 Nov 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.othlo.tech/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ブロックチェーンってなに？</title>
      <link>http://www.othlo.tech/blogs/blockchain/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.othlo.tech/blogs/blockchain/</guid>
      <description>

&lt;h1 id=&#34;ブロックチェーンってなに&#34;&gt;ブロックチェーンってなに?&lt;/h1&gt;

&lt;p&gt;こんにちは！&lt;/p&gt;

&lt;p&gt;OthloTechのブログ初投稿になります。私、たつま&lt;a href=&#34;https://twitter.com/tatsutatsu103&#34;&gt;@tatsutasu103&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;今回のblogは以下に当てはまる人が対象です！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;金儲けしたい人&lt;/li&gt;
&lt;li&gt;小銭儲けしたい人&lt;/li&gt;
&lt;li&gt;財布を潤したい人&lt;/li&gt;
&lt;li&gt;お金は欲しいけど、肉体労働したくない人&lt;/li&gt;
&lt;li&gt;不労所得で生きていきたい人&lt;/li&gt;
&lt;li&gt;とりあえず、お金が欲しい人&amp;hellip;&lt;/li&gt;
&lt;li&gt;etc,,,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんな人たちに&lt;strong&gt;Bitcoin&lt;/strong&gt;を教えちゃいます。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161124/bitcoin.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;bitcoin&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;でもBitcoinを始めるにはそれを支える技術である、&lt;strong&gt;ブロックチェーン&lt;/strong&gt; について理解しなければなりません。&lt;/p&gt;

&lt;p&gt;そこで今回は、&lt;strong&gt;ブロックチェーン&lt;/strong&gt; をご紹介します。&lt;/p&gt;

&lt;p&gt;(もちろん、Bitcoinも出てきますよ！(￣ー￣)v)&lt;/p&gt;

&lt;h2 id=&#34;ブロックチェーンとは&#34;&gt;ブロックチェーンとは??&lt;/h2&gt;

&lt;p&gt;一言で行ってしまうと&lt;/p&gt;

&lt;h4 id=&#34;bitcoinの取引履歴-です&#34;&gt;&lt;strong&gt;&lt;em&gt;Bitcoinの取引履歴&lt;/em&gt;&lt;/strong&gt; です。&lt;/h4&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161124/blockchain.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;blockchain&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;ここから詳しく説明していきますね！&lt;/p&gt;

&lt;p&gt;わかりやすくいうと&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;ブロックチェーンは-すでにマイニング-採掘-されて世に存在するビットコインのやりとりのすべてを記録した-ビットコインの取引記録-です&#34;&gt;&lt;strong&gt;&lt;em&gt;ブロックチェーンは、すでにマイニング(採掘)されて世に存在するビットコインのやりとりのすべてを記録した「ビットコインの取引記録」です&lt;/em&gt;&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;by&lt;a href=&#34;http://gigazine.net/news/20140307-what-is-bitcoin-2nd/&#34;&gt;仮想通貨「Bitcoin」を完璧に理解するために知っておきたいことまとめ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;つまり&amp;hellip;&lt;/p&gt;

&lt;p&gt;Bitcoinのブロックチェーンとは、Bitcoinの通貨がどこからどこに送ったということが&lt;strong&gt;記録されている履歴&lt;/strong&gt; ということ！。&lt;/br&gt;
そして、そのデータは一つの場所に保存されているのではなく、&lt;strong&gt;取引記録は、Bitcoinのネットワークに参加しているコンピュータに分散されて保存&lt;/strong&gt; されています！&lt;/p&gt;

&lt;p&gt;ブロックチェーンは、取引記録(トランザクション)を一つのブロックにまとめて、そのブロックをチェーン(鎖)のようにつなげて保存したものになります。
&lt;strong&gt;&lt;em&gt;チェーン状に繋げることで、データの変更、改ざんが実質不可能になります。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;鎖のように繋がれているの意味&#34;&gt;鎖のように繋がれているの意味&lt;/h4&gt;

&lt;p&gt;チェーン状にデータが入っているブロックって??いきなりなんだよーって話なんですが、&lt;/br&gt;
取引データを単に保存しているデータベースは鎖のようにデータが結びついていないので、上記のような形態ではありません。&lt;/p&gt;

&lt;p&gt;鎖のようにというのは、*&lt;strong&gt;１つ前のブロックのハッシュ値が次のブロックの中に含まれている&lt;/strong&gt; からそう呼ばれています。&lt;/p&gt;

&lt;h2 id=&#34;ブロックチェーン情報を確認する&#34;&gt;ブロックチェーン情報を確認する&lt;/h2&gt;

&lt;p&gt;ブロックチェーンの情報は全世界の人に公開されています。&lt;/p&gt;

&lt;p&gt;以下が、Bitcoinのブロックチェーンを確認するための有名なサイトになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blockchain.info/&#34;&gt;Bitcoin Block Explorer - blockchain.info&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;終わりに&#34;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;今回はブロックチェーンについて紹介しました。ブロックチェーン技術はBitcoinに使われている技術だけではなく、
世界的なOSSプロジェクトである、「&lt;a href=&#34;https://www.hyperledger.org/&#34;&gt;Hyper Ledger project&lt;/a&gt;」や「&lt;a href=&#34;http://www.enigma.co/&#34;&gt;Enigma&lt;/a&gt;」にも応用され、使われております。&lt;/p&gt;

&lt;p&gt;これからあらゆる分野で活躍が期待されている技術であるので、ぜひ学んでみる価値があります。&lt;/p&gt;

&lt;h2 id=&#34;bitcoinをより知りたい&#34;&gt;Bitcoinをより知りたい。&lt;/h2&gt;

&lt;p&gt;参考になるサイトを紹介します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/cookle/5-58379474&#34;&gt;5分でわかるブロックチェーンの基本的な仕組み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gigazine.net/news/20140307-what-is-bitcoin-2nd/&#34;&gt;仮想通貨「Bitcoin」を完璧に理解するために知っておきたいことまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wazanova.jp/items/1314&#34;&gt;ブロックチェーンをもう一段階深く理解する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hshimo/items/bd849363a871966a923f&#34;&gt;ビットコインのブロックチェーンの技術的な説明 まとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blocktech.hateblo.jp/&#34;&gt;ブロックチェーン技術ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hshimo/items/1881fba8957c2a6e17ca&#34;&gt;ブロックチェーンについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/hshimo/items/8104dc2c4ad35720013e&#34;&gt;ビットコイン2.0 とは? Bitcoin 2.0 資料まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>機械学習コンペティションKaggleのススメ</title>
      <link>http://www.othlo.tech/blogs/recommend-of-kaggle/</link>
      <pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.othlo.tech/blogs/recommend-of-kaggle/</guid>
      <description>

&lt;h1 id=&#34;機械学習コンペティションkaggle&#34;&gt;機械学習コンペティションKaggle&lt;/h1&gt;

&lt;p&gt;こんにちは、TeraBytesです。&lt;/p&gt;

&lt;p&gt;読者のみなさんは機械学習には興味あったりしますでしょうか？&lt;/p&gt;

&lt;p&gt;実際に試したいけどデータがないだとか、機械学習について深く勉強したいなんて方は、&lt;/p&gt;

&lt;p&gt;機械学習のコンペティションであるKaggleをオススメします。&lt;/p&gt;

&lt;p&gt;この記事は、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;機械学習・データ分析に興味があるor極めたい！&lt;/li&gt;
&lt;li&gt;英語がわかる（特にKaggleを極めたい人は）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と英語のハードルがありますが、機械学習の初心者から上級者までためになる記事になるかと思います。&lt;/p&gt;

&lt;h2 id=&#34;そもそもkaggleって何&#34;&gt;そもそもKaggleって何？&lt;/h2&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161117/kaggle.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;kaggle&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;オンラインで機械学習の精度を競い合うサービスです。世界中のデータサイエンティストが集まって競っています。&lt;/p&gt;

&lt;p&gt;中には企業が問題を出して、賞金がかかったコンペも存在しております。&lt;/p&gt;

&lt;p&gt;Kaggleのコンペティションでは、指定された機械学習のスコアの良さを競い合います。&lt;/p&gt;

&lt;p&gt;Kaggleは&lt;a href=&#34;https://www.kaggle.com/&#34;&gt;こちら&lt;/a&gt;のサイトとなります。&lt;/p&gt;

&lt;p&gt;英語が必要な理由の一つがkaggleというサイト自体が英語サイトである点ですね。&lt;/p&gt;

&lt;p&gt;ちなみにガチ勢になりたいって人は他の英語のサイトも漁って行くことになるので、英語が必要になります。&lt;/p&gt;

&lt;p&gt;また、Kaggleユーザがデータセットを公開し合ってそのデータを分析するということもできますが本記事では割愛で。&lt;/p&gt;

&lt;h2 id=&#34;どうやって始めんの&#34;&gt;どうやって始めんの？&lt;/h2&gt;

&lt;p&gt;とりあえず会員登録しましょう。&lt;a href=&#34;https://www.kaggle.com/&#34;&gt;ホームページ&lt;/a&gt;に入ってとりあえず &amp;ldquo;Create an account&amp;rdquo; を押す。そっから会員登録を済ませましょう。&lt;/p&gt;

&lt;p&gt;会員登録を済ませたら、 &amp;ldquo;Competition&amp;rdquo; に移り、さらに一覧に出てくる &amp;ldquo;Titanic: Machine Learning from Disaster&amp;rdquo; へと移ります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/c/titanic&#34;&gt;こちら&lt;/a&gt;に移るはずです。ここがコンペのチュートリアルになりますのでここから挑戦しましょう！&lt;/p&gt;

&lt;p&gt;プログラミング言語はRかPythonを使ってできますが、Excelを使って参加することなんてできます。&lt;/p&gt;

&lt;p&gt;また、機械学習やデータ分析に慣れていない人も、それらを簡単に扱えるようになるライブラリを覚えるいいきっかけとなります。&lt;/p&gt;

&lt;h2 id=&#34;どうやったら良いスコア出せるの&#34;&gt;どうやったら良いスコア出せるの？&lt;/h2&gt;

&lt;p&gt;高い精度を出すには、モデルを選んだり、モデルのパラメータを調整するだけではなく、データ自体をいじっていかないと高い順位は出せません。&lt;/p&gt;

&lt;p&gt;というかデータいじりの方が重要になっていきます。（ディープラーニング使うとかだと別かもしれませんが・・・）&lt;/p&gt;

&lt;p&gt;初めてだとなかなかとっつきにくいかと思いますが&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kernelsを読む&lt;/li&gt;
&lt;li&gt;外部のサイトで勉強する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;といったことをすればより精度の高いモデルが作れるのではないかと思います。&lt;/p&gt;

&lt;p&gt;1についてですが、コンペのページに &amp;ldquo;Kernels&amp;rdquo; という項目があります。そこには、こうしたらスコア上がったよーとかこういう分析結果が出たよー&lt;/p&gt;

&lt;p&gt;といった記事が投稿されています。Kernelsはコンペごとに投稿される記事なのでこれを利用するっきゃないですね。&lt;/p&gt;

&lt;p&gt;2については機械学習わからない、ガチ勢ってどんなことしているんだって人ほどお世話になるんじゃないかと思います。&lt;/p&gt;

&lt;p&gt;前述の通り英語のサイトも漁っていかないといけないかもしれませんが、基本的なことはQiitaや日本語のブログから学ぶこともできます。&lt;/p&gt;

&lt;p&gt;入門者向けの記事だと&lt;a href=&#34;http://matome.naver.jp/odai/2147187291050657501&#34;&gt;このようなまとめ&lt;/a&gt;があったり、&lt;a href=&#34;http://qiita.com/taka4sato/items/802c494fdebeaa7f43b7&#34;&gt;このような記事&lt;/a&gt;なんかが詳しいですね。&lt;/p&gt;

&lt;p&gt;また、やり込んでいくうちにいろんな用語や手法に当たったりするので、やり込めばそれだけ力が身につきます。&lt;/p&gt;

&lt;h2 id=&#34;終わりに&#34;&gt;終わりに&lt;/h2&gt;

&lt;p&gt;本記事ではKaggleの紹介だけで、しかもKaggleのコンペやり込めば機械学習できるようになるよ！とかいう投げやりな感じなので、これだけじゃわかんねーんだけどって方は申し訳ないです。&lt;/p&gt;

&lt;p&gt;Kaggleは有名なサイトなので、前述の通り調べていけばKaggleについてもわかっていくと思います。&lt;/p&gt;

&lt;p&gt;というか&lt;a href=&#34;http://qiita.com/taka4sato/items/802c494fdebeaa7f43b7&#34;&gt;この記事&lt;/a&gt;の方が本記事よりも詳しいので、興味のある方はこちらを読んでスタートしましょう。&lt;/p&gt;

&lt;p&gt;興味のある方はKaggleを始めて、機械学習やり込みましょう！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OthloTechでの開発サイクル</title>
      <link>http://www.othlo.tech/blogs/othlotech-dev-cycle/</link>
      <pubDate>Sat, 12 Nov 2016 02:45:17 +0900</pubDate>
      
      <guid>http://www.othlo.tech/blogs/othlotech-dev-cycle/</guid>
      <description>

&lt;h1 id=&#34;othlotechでの開発サイクル&#34;&gt;OthloTechでの開発サイクル&lt;/h1&gt;

&lt;p&gt;こんにちは∩(ﾟ∀ﾟ∩) &lt;a href=&#34;https://twitter.com/hyde141421356&#34;&gt;@ぽこひで&lt;/a&gt;です。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161113/wwothlo.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;OthloTech公式サイト&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;今日は &lt;strong&gt;OthloTech&lt;/strong&gt; ではどのように開発をしているかをこの&lt;a href=&#34;http://www.othlo.tech&#34;&gt;OthloTech公式サイト&lt;/a&gt;を例に簡単に紹介できたらと思います。
以下、OthloTech内での通称wwOthlo(ダブダブオスロ)と呼ぶことにします！&lt;/p&gt;

&lt;h2 id=&#34;目次&#34;&gt;目次&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;wwOthloの開発環境&lt;/li&gt;
&lt;li&gt;wwOthloの開発サイクル&lt;/li&gt;
&lt;li&gt;wwOthloの投稿フロー&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;wwothloの開発環境&#34;&gt;wwOthloの開発環境&lt;/h3&gt;

&lt;p&gt;OthloTechのサイトはサーバー側は持たずに&lt;a href=&#34;https://github.com/blog/2228-simpler-github-pages-publishing&#34;&gt;GitHub Pages&lt;/a&gt;というGitHubの提供するホスティングサービスを用いてるので、基本的に静的なページ(HTML, CSS, JavaScript)などで構成されています。&lt;/p&gt;

&lt;p&gt;といっても、毎回ブログ記事やイベントレポートを投稿するたびにHTMLで一から書いていては身が持たないので、そこはGo製の静的ページジェネレータ&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;Hugo&lt;/a&gt;を用いてマークダウンから静的な記事を生成しています。&lt;/p&gt;

&lt;p&gt;この辺の理由とかはめちゃくちゃ簡単にですが、前々回のブログ記事&lt;a href=&#34;http://www.othlo.tech/blogs/hugo+github-pages/&#34;&gt;Hugo + GithubPages で公式サイトを作り直したお話&lt;/a&gt;で触れているのでまだ読んでない方は見てみてくださいー！&lt;/p&gt;

&lt;p&gt;他に、さすがに&lt;code&gt;CSS&lt;/code&gt;で書くのはだるいので、&lt;code&gt;SCSS&lt;/code&gt;で書いていて&lt;code&gt;SCSS-Lint&lt;/code&gt;で静的なチェックは行っています。ただ、現在はテンプレートを参考にサイトを作ったこともあってまだまだ負債を抱えているので、今後解消していけたらな！って感じです。&lt;/p&gt;

&lt;p&gt;一応、wwOthloは&lt;a href=&#34;https://github.com/OthloTech/OthloTech&#34;&gt;オープンソース&lt;/a&gt;で開発をしているので、もしバグを見つけたらバグレポートをするでも、&lt;code&gt;fork&lt;/code&gt;してプルリクを出していただいてもどちらかしていただけると、超喜びます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;∩(〃･ω･〃)∩ ばんじゃーい&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;wwothloの開発サイクル&#34;&gt;wwOthloの開発サイクル&lt;/h3&gt;

&lt;p&gt;上記述べた感じで開発をしていて、今度はその開発サイクルについて紹介しますー！&lt;/p&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161113/othlotech_dev_cycle.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;GitHub Flow&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;OthloTechではGitHub Flowを採用しています。&lt;/p&gt;

&lt;h4 id=&#34;ブランチ&#34;&gt;ブランチ&lt;/h4&gt;

&lt;p&gt;以下のようなブランチ命名規則でブランチを切って直接&lt;code&gt;master&lt;/code&gt;ブランチにプルリクを出してレビューするといった流れを取っています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;新機能：feature
バグ修正：fix
リファクタ系：clean or refactor
記事とか：post or blog or event
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この命名規則は最近決まったのでこれからメンバー内でも意識していこうといった感じです(･∀･)👍&lt;/p&gt;

&lt;p&gt;レビューはプルリクを立てた人が適当にメンバーにメンションを飛ばして、レビューをしてもらう形を採用していて、そのレビュー担当者が&lt;code&gt;LGTM&lt;/code&gt;ならマージをしています！&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161113/review.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;レビューまかせる様子&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;また、&lt;code&gt;master&lt;/code&gt;ブランチとデプロイ用の&lt;code&gt;gh-pages&lt;/code&gt;ブランチはGitHubの機能で保護をしていて、&lt;code&gt;master&lt;/code&gt;ブランチはPR経由でしか変更ができないようにしていて、&lt;code&gt;gh-pages&lt;/code&gt;は特定の人にしかpush権限を与えていません。これによって、デプロイミスを極力防ごうとしています( ´,_ゝ｀)&lt;/p&gt;

&lt;h4 id=&#34;ラベル&#34;&gt;ラベル&lt;/h4&gt;

&lt;p&gt;意識して使っているラベルは&lt;code&gt;WIP&lt;/code&gt;ラベルと&lt;code&gt;REVIEW&lt;/code&gt;ラベルで、まだここは手動でつけているのですが、プルリクを立てて作業中には&lt;code&gt;WIP&lt;/code&gt;ラベルを、作業を終えてレビューをお願いするときは&lt;code&gt;REVIEW&lt;/code&gt;ラベルに切り替えて、レビュー待ちであることを明示化しています。&lt;/p&gt;

&lt;p&gt;他にISSUESで使っているラベルはデフォルトのもので、主にこんな感じのを使っています。&lt;/p&gt;

&lt;div class=&#34;post-table&#34;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;ラベル&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;意味&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;enhancement&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;機能追加系&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;bug&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;普通にバグ。このラベルのISSUEは即対応心がけてる&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;help wanted&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;助けが必要ヽ( ﾟдﾟ)ﾉ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;question&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;質問や議論。解決したらクローズする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;h3 id=&#34;wwothloの投稿フロー&#34;&gt;wwOthloの投稿フロー&lt;/h3&gt;

&lt;p&gt;wwOthloでは現状、月に一度のペースで行われるイベントの&lt;a href=&#34;http://www.othlo.tech/events&#34;&gt;イベントレポート&lt;/a&gt;と&lt;a href=&#34;http://www.othlo.tech/blogs&#34;&gt;ブログ記事&lt;/a&gt;の二つを定期的に更新しています。そこでの投稿のフローを紹介していきまーす！&lt;/p&gt;

&lt;p&gt;Hugoという静的ページジェネレーターを使っているので、記事を一からHTMLで書くのではなく、マークダウン記法で記事を書いています。投稿や校正にもPR形式で行っていて、エンジニアやデザイナーなど関係なしにみんなPRを立てて、メンバーで校正という名のレビューをして、&lt;code&gt;master&lt;/code&gt;ブランチにマージ -&amp;gt; デプロイといった流れで投稿まで行っています。&lt;/p&gt;

&lt;h3 id=&#34;さいごに&#34;&gt;さいごに&lt;/h3&gt;

&lt;p&gt;簡単にOthloTechでの開発サイクルをwwOthloを例に説明してみました。OthloTechでは他にも開発をしていたりしているので、興味の持った学生はゆるふわに&lt;a href=&#34;https://twitter.com/othlotech&#34;&gt;Twitter&lt;/a&gt;か&lt;a href=&#34;http://www.othlo.tech/contact/&#34;&gt;お問い合わせフォーム&lt;/a&gt;にて気軽に聞いてくださいー！&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;11&lt;/sup&gt;&amp;frasl;&lt;sub&gt;26&lt;/sub&gt;(土)にYahoo!さんとコラボして、&lt;a href=&#34;http://yj-meetup.connpass.com/event/44769/&#34;&gt;Reactハンズオン&lt;/a&gt;を開くのでもしよければ来てくださいな(*´∀`*)&lt;/p&gt;


&lt;figure class=&#34;aden&#34;&gt;

    &lt;a href=&#34;http://yj-meetup.connpass.com/event/44769/&#34;&gt;
        &lt;img src=&#34;https://connpass-tokyo.s3.amazonaws.com/thumbs/a1/89/a189d96b09f4d4958b199aa08cd6c138.png&#34;  /&gt;
    &lt;/a&gt;

    
    &lt;figcaption&gt;
        &lt;h4&gt;OthloTech x Yahoo Reactハンズオン&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>ライトニングトークを面白くするたった3つのテクニック</title>
      <link>http://www.othlo.tech/blogs/lightning_talks_technique/</link>
      <pubDate>Thu, 03 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.othlo.tech/blogs/lightning_talks_technique/</guid>
      <description>

&lt;h1 id=&#34;ライトニングトーク-lt-を面白くするたった3つのテクニック&#34;&gt;ライトニングトーク（LT）を面白くするたった3つのテクニック&lt;/h1&gt;

&lt;p&gt;こんにちは(○´∀｀)ﾉﾞ
OthloTech初のブログを書くのは私、オトモレ(&lt;a href=&#34;https://twitter.com/otomore01&#34;&gt;@otomore01&lt;/a&gt;)でございます。
↓ある日のSlack↓&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slack_screenshot.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ある日のSlack&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;ということで、記念すべき第1稿に任命されました。&lt;strong&gt;光栄です！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今回のお題はこれでいきます。
&lt;br/&gt;&lt;br/&gt;
&lt;div style=&#34;text-align: center;font-size: xx-large; font-weight: bold; color: red&#34;&gt;「お前らのLTはつまらん」&lt;/div&gt;
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;初っ端からキツい内容でアレなんですが…… &lt;strong&gt;聞くに堪えないLTって正直少なくないですよね？&lt;/strong&gt;
せっかく面白いネタがあるのに、面白く伝えないと聞いてもらえないし伝わりません。
もったいない (´；ω；`)&lt;/p&gt;

&lt;p&gt;でも大丈夫。
&lt;strong&gt;あなたのライトニングトークを面白くするテクニックを伝授します！&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-フォントサイズをギリギリまでデカくしろ&#34;&gt;1. フォントサイズをギリギリまでデカくしろ&lt;/h2&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/font-size_mini.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;フォントサイズ小&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは、頭では分かっていてもやりがちな間違い。
登壇者が好きなことほど、細かい部分まで書きたくなるものですが&lt;strong&gt;そんなの誰も読まない&lt;/strong&gt;んですよ。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/font-size_big.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;フォントサイズ大&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;ついでにスライドサイズも変えておきましょう&#34;&gt;ついでにスライドサイズも変えておきましょう&lt;/h3&gt;

&lt;p&gt;せっかく文字をデカくしたのに、スクリーン(ディスプレイ)の端が余ってるのはモッタイナイ！
スクリーンのサイズ（厳密にはアスペクト比）は「4:3」か「16:9」の2つがほとんどです。
会場のスクリーンについて調べておくか、わからなければ両方作っておくのが良いでしょう。&lt;/p&gt;

&lt;h2 id=&#34;2-ボケろ&#34;&gt;2. ボケろ&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;LTは漫才に似ています。&lt;/strong&gt; いやもう&lt;strong&gt;「
LT == 漫才」&lt;/strong&gt;で Q.E.D. です。
おっとw 拙者ついクセで = (イコール) を2つ並べてしまったでござるﾃﾞｭﾌﾌww&lt;/p&gt;

&lt;p&gt;面白いLTとは登壇者がボケ、聴衆が(心のなかで)ツッコミを入れることにより化学反応が起き笑いが生まれているのです。
いきなり「ボケろ」と言われても難しいと思うので、いくつか例をご紹介します。&lt;/p&gt;

&lt;h3 id=&#34;画像でボケろ&#34;&gt;画像でボケろ&lt;/h3&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slide-24.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;時間が足りないとき&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは「時間が足りないときってありますよね」などと話しながら見せるスライド。
ドラマ「24」のように有名なドラマだと、見たことない人でも&lt;strong&gt;時間が足りないことだけは何となくわかった気持ち&lt;/strong&gt;になります。&lt;/p&gt;

&lt;p&gt;次は少しレベルが高いかもしれません。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/slide-kaba.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;GABAの話をするとき&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;これは「みなさんGABA(ギャバ)って知ってますか？」と話す場面です。
説明するまでもありませんが「GABA(ギャバ)」と「KABA(カバ)」をかけたダジャレです。
ただしこれは、&lt;strong&gt;一歩間違えると寒いオヤジギャグで終わることも有り得る&lt;/strong&gt;ので使い所が肝心です。&lt;/p&gt;

&lt;p&gt;例に挙げたスライドは、分かりやすくするため文字を入れました。
本来ならば画像を全体に広げるほうがいいでしょう。&lt;/p&gt;

&lt;h3 id=&#34;何度もボケろ&#34;&gt;何度もボケろ&lt;/h3&gt;

&lt;p&gt;たとえオヤジギャグでも、何度も同じボケをするのは意外と有効です。
何故ならば、&lt;strong&gt;同じボケを続けることにより「聴衆が笑いどころを理解する」から&lt;/strong&gt;です。
例えるなら&lt;strong&gt;「バラエティ番組のスタッフの笑い声」と同じ&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;1度目2度目はウケなくてつらいかもしれませんが、見ている人に「ここがおもしろいんじゃ」と伝えてください。
3度目には会場全体から大爆笑を攫うことでしょう。(保証はしません)&lt;/p&gt;

&lt;h3 id=&#34;オチを作れ&#34;&gt;オチを作れ&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;「終わり良ければすべて良し」&lt;/strong&gt;です。
最後の終わらせ方が上手くないと、それまでどれほど面白いLTをしていても評価が下がります。&lt;/p&gt;

&lt;p&gt;オチの作り方は多種多様です。
「三段オチ」や「起承転結」「伏線回収」を取り入れるといいでしょう。&lt;/p&gt;

&lt;p&gt;また、必ずしも笑いを取る必要はありません。
例えば、感動オチ（例：紆余曲折を経て解決する、とか）は聴衆からの共感を得るのに最適でしょう。&lt;/p&gt;

&lt;p&gt;ネタを伝えてどのような感想を与えたいかによって変えてみて下さい。
「LTは漫才に似ています 」と書きましたが [漫才 オチ] などでググると参考になる資料と出会えます。&lt;/p&gt;

&lt;h2 id=&#34;3-練習しろ&#34;&gt;3. 練習しろ&lt;/h2&gt;

&lt;p&gt;ここまでスライドの作り方ばかりお伝えしてきましたが、最終的には練習あるのみです。
練習のときに気をつけるポイントは4つ。&lt;/p&gt;

&lt;h3 id=&#34;機材のチェック&#34;&gt;機材のチェック&lt;/h3&gt;

&lt;p&gt;本番前に、ディスプレイまたはプロジェクタのコネクタを確認しておきましょう。
持ち合わせがなかったり忘れてしまった場合は、前後の人や主催者にお願いして借りるアテをつけておきましょう。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/tanshi_dsub.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;VGA端子&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;時間配分&#34;&gt;時間配分&lt;/h3&gt;

&lt;p&gt;LTの時間はほとんどが5分、もしくは10分です。
主催者視点からいうと、短く終わる場合は大歓迎。
&lt;strong&gt;時間を超えるとはっきり言って迷惑&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;PowerPointやKeynoteの発表者ツールには、スライドショー開始時からの経過時間が表示できます。
チラっと見て、余裕がなければ早口で話すのもテクニックです。&lt;/p&gt;

&lt;p&gt;練習時は30秒くらい早めに終わるのがいいでしょう。
聴衆のリアクションの時間、例えば拍手喝采が起きたらその間はスライドを止めておくはずです。&lt;/p&gt;

&lt;h3 id=&#34;聴衆を見て話す&#34;&gt;聴衆を見て話す&lt;/h3&gt;

&lt;p&gt;スライドやPCを見ながら話す人、たまにいますよね。
きっと&lt;strong&gt;「あーん？？お前は誰にプレゼンしてるんだ？？？スクリーンか？？？？」&lt;/strong&gt;と聴衆は感じるはずです。&lt;/p&gt;

&lt;p&gt;聴衆の目を見て話すだけで、「やっべ、見なきゃ！」という気持ちになります。（言うほど簡単じゃないんですけどね。）&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/presentation_pc_man_eye.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;聴衆の目を見る&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;口癖に気をつける&#34;&gt;口癖に気をつける&lt;/h3&gt;

&lt;p&gt;次のセリフをロードする間「あのー」「えーと」などと垂れ流してしまうそこのアナタ！
これらを&lt;strong&gt;1回使う度に、そのプレゼンの説得力は半減すると言います。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;逆に言えば、&lt;strong&gt;1回「えーと」を減らせば説得力は倍になります！&lt;/strong&gt;
これらの口癖を言ってしまうのには色々原因があるのですが、大抵は「単なる練習不足」です。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;さあ、練習あるのみ！&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;〆&#34;&gt;〆&lt;/h3&gt;

&lt;p&gt;いかがでしたか？
僕は「プレゼン」と「ライトニングトーク」は別モノだと思っています。&lt;/p&gt;

&lt;p&gt;プレゼンで使うテクニックの中には、ライトニングトークだと逆効果のものもあります。（もちろん使えるものもあります:D）
いろんな人のLTを見て研究するも良し、慣れてきたら自分のオリジナリティを加えていくも良し。&lt;/p&gt;

&lt;p&gt;いきなり全部は難しいかもしれません、ひとつずつ試していきましょう。
これでアナタもライトニングトークマスターになれるはずです！&lt;/p&gt;

&lt;div style=&#34;text-align: center;font-size: xx-large; font-weight: bold&#34;&gt;どうだい？ LTしたくなってきただろう？&lt;/div&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/blogs/20161103/message_goseichou_man.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ご清聴ありがとうございました&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;

</description>
    </item>
    
    <item>
      <title>Hugo&#43;GithubPagesでサイトをリニューアル</title>
      <link>http://www.othlo.tech/blogs/hugo&#43;github-pages/</link>
      <pubDate>Sun, 23 Oct 2016 02:45:17 +0900</pubDate>
      
      <guid>http://www.othlo.tech/blogs/hugo&#43;github-pages/</guid>
      <description>

&lt;h1 id=&#34;hugo-githubpages-で公式サイトを作り直したお話&#34;&gt;Hugo + GithubPages で公式サイトを作り直したお話&lt;/h1&gt;

&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/hyde141421356&#34;&gt;@pokohide&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;この度、OthloTechの公式サイトをリニューアルしました。過去のサイトは&lt;/p&gt;

&lt;div class=&#34;post-table&#34;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サーバーサイド&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Material UI&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CSSフレームワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Heroku&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PaaS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;gulp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;タスクランナー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ect&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;テンプレートエンジン&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;p&gt;サーバーサイドも自前で作っておけば何か機能を追加したいと思ったときに対応できるかなと、サーバーサイドも書いていたのですが
当分は必要にならないだろうという理由と、動作に不調があったので、乗り換えることにしました。&lt;/p&gt;

&lt;p&gt;リニューアルする目的としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マークダウンで記事が書ける&lt;/li&gt;
&lt;li&gt;保守が楽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この条件から、今回は &lt;code&gt;Hugo&lt;/code&gt; と &lt;code&gt;GitHub Pages&lt;/code&gt; で構成しました。&lt;/p&gt;

&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/banners/blogs/hugo.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;Hugo&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;はGo言語で動いている静的サイトジェネレーターで静的な&lt;code&gt;html&lt;/code&gt;を生成することができます。静的サイトジェネレーターは他にも
&lt;code&gt;Jekyll&lt;/code&gt;や&lt;code&gt;Hexo&lt;/code&gt;など他にも色々あったのですが、なんとなくで今回は&lt;code&gt;Hugo&lt;/code&gt;を選びました。&lt;/p&gt;

&lt;p&gt;一応特徴としては、記事の生成が高速らしく、他のブログから参照したのが以下の表。&lt;/p&gt;

&lt;div class=&#34;post-table&#34;&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;記事数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Octopress&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hexo&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Pelican&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Gitbook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Jekyll&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hugo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.86&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.98&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.96&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.64&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.03&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.94&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.79&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;25.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;14.61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.34&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.82&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://tamura.goga.co.jp/article/429818193.html&#34;&gt;静的サイトジェネレータの生成時間比較&lt;/a&gt; より&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1000記事の生成ともなると、違いがわかるほどの速いことがわかります。まぁ1000記事まで貯まるまでには何年かかるかわからないですけどね。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;のテーマはここにあるので、これを参考にして作るか自作するかどちらでもいいでしょう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;GitHub Pages&lt;/code&gt;はGitHubのサービスのひとつで、GitHub上のリポジトリにあるコンテンツを利用してWEBページとして公開できるホスティングサービスです。
静的ページ、静的コンテンツのみを公開できるので&lt;code&gt;Node.js&lt;/code&gt;や&lt;code&gt;PHP&lt;/code&gt;などで動的ページの生成などはできません。&lt;/p&gt;

&lt;p&gt;あと無料∩(ﾟ∀ﾟ∩)&lt;/p&gt;

&lt;p&gt;詳細は&lt;a href=&#34;https://github.com/blog/2228-simpler-github-pages-publishing&#34;&gt;本家&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;h2 id=&#34;サイトつくろー&#34;&gt;サイトつくろー&lt;/h2&gt;

&lt;p&gt;雑ですが、Hugoの導入からテンプレートを使ってサイトを作るまでの流れは以下のリンクを参考にしてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/syui/items/869538099551f24acbbf&#34;&gt;http://qiita.com/syui/items/869538099551f24acbbf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マークダウンで記事とかを書くときは&lt;code&gt;Shortcode&lt;/code&gt;を使うといいですよ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/waytoa/items/4107945cbd3883f51755&#34;&gt;http://qiita.com/waytoa/items/4107945cbd3883f51755&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;デプロイの流れ&#34;&gt;デプロイの流れ&lt;/h2&gt;

&lt;p&gt;今回はOthloTechの組織アカウントでOthloTechというレポジトリを作って開発を行っていました。&lt;/p&gt;

&lt;p&gt;GitHub Pagesには2種類の方法があって、グループページという&lt;code&gt;アカウント名.github.io&lt;/code&gt;というレポジトリのmasterブランチを反映する方法と
プロジェクトページといって、適当なレポジトリの&lt;code&gt;gh-pages&lt;/code&gt;ブランチを&lt;code&gt;http://アカウント名.github.io/リポジトリ名/&lt;/code&gt;に反映する方法があります。&lt;/p&gt;

&lt;p&gt;※ 最近ではどのブランチを反映するかを設定できるみたいです。ただ今回は通例に従って&lt;code&gt;gh-pages&lt;/code&gt;ブランチをデプロイブランチにすることにします。&lt;/p&gt;

&lt;p&gt;今回は後者の方法で実装するので、&lt;code&gt;gh-pages&lt;/code&gt;にデプロイする流れを説明して終わりにします。流れとしては、同じレポジトリのあるサブディレクトリの中身を
別ブランチに&lt;code&gt;push&lt;/code&gt;する方法をとります。&lt;/p&gt;

&lt;p&gt;そのために&lt;a href=&#34;https://git-scm.com/docs/git-worktree&#34;&gt;git-worktree&lt;/a&gt;を使います。&lt;code&gt;git-worktree&lt;/code&gt;を使うと指定のブランチをサブディレクトリ以下にチェックアウト
することができるので、作業用のブランチと公開用の&lt;code&gt;gh-pages&lt;/code&gt;ブランチを切り替えずに同時に編集できるようになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -d pages # pagesディレクトリにコンテンツを生成する。(デフォルトだとpublicフォルダ)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドでコンテンツをpagesフォルダに生成できるので、このディレクトリの中身を&lt;code&gt;gh-pages&lt;/code&gt;にプッシュします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout master
git worktree add pages gh-pages # pagesがブランチをチェックアウトするディレクトリ名、gh-pagesが取り込むブランチ名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでgh-pagesブランチにpagesディレクトリ以下がプッシュされます。しかし、この方法だとコンテンツを消した際に再び&lt;code&gt;hugo -d pages&lt;/code&gt;と
コマンドを打っても、過去の記事が&lt;code&gt;pages&lt;/code&gt;フォルダから消えずに残ったままになります。&lt;/p&gt;

&lt;p&gt;なので、過去の記事を消して、記事を再生成して、デプロイするのをシェルを書いて楽します。&lt;/p&gt;

&lt;h5 id=&#34;deploy-sh&#34;&gt;deploy.sh&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

# pagesフォルダの ., .., .git 以外を消去
ls -la pages | grep -v -E &#39;.|.git$&#39; | xargs rm -rf

# deploy用のファイルを生成
hugo -d pages

# deploy
cd pages
git add .
git commit -m &#39;updated by deploy.sh&#39;
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;chmod 755 deploy.sh # 実行権限を与える
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これであとは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デプロイできます。ハッピー。&lt;/p&gt;

&lt;h3 id=&#34;ドメイン設定&#34;&gt;ドメイン設定&lt;/h3&gt;

&lt;p&gt;こうして公開したサイトに独自ドメインを設定して、 &lt;a href=&#34;http://www.othlo.tech&#34;&gt;OthloTechの公式サイト&lt;/a&gt;としました。&lt;/p&gt;

&lt;p&gt;そのあたりはここを参考するとわかりやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&#34;&gt;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;さいごに&#34;&gt;さいごに&lt;/h3&gt;

&lt;p&gt;せっかくリニューアルしたので、イベントレポートやブログを書いていこうと思います！&lt;/p&gt;

&lt;p&gt;一応作業のフローはプルリクベースで文章の校正などを見て、メンバーのLGTMが2つ以上ついたらマージ可能にするという体制で&lt;/p&gt;

&lt;p&gt;記事の更新もしていこうと思っているので、そのあたりもまとまってきたらまた記事にしたいと思いますー！&lt;/p&gt;

&lt;p&gt;これからもOthloTechをよろしくお願いしますo(*⌒─⌒*)o&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>