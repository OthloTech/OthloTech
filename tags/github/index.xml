<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OthloTech -学生クリエイティブ集団-</title>
    <link>http://www.othlo.tech/tags/github/index.xml</link>
    <description>Recent content on OthloTech -学生クリエイティブ集団-</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 OthloTech. All rights reserved. Crafted with love</copyright>
    <atom:link href="http://www.othlo.tech/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo&#43;GithubPagesでサイトをリニューアル</title>
      <link>http://www.othlo.tech/blogs/hugo&#43;github-pages/</link>
      <pubDate>Sun, 23 Oct 2016 02:45:17 +0900</pubDate>
      
      <guid>http://www.othlo.tech/blogs/hugo&#43;github-pages/</guid>
      <description>

&lt;h1 id=&#34;hugo-githubpages-で公式サイトを作り直したお話&#34;&gt;Hugo + GithubPages で公式サイトを作り直したお話&lt;/h1&gt;

&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/hyde141421356&#34;&gt;@pokohide&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;この度、OthloTechの公式サイトをリニューアルしました。過去のサイトは&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;サーバーサイド&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Material UI&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CSSフレームワーク&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;Heroku&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;PaaS&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;gulp&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;タスクランナー&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;ect&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;テンプレートエンジン&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;サーバーサイドも自前で作っておけば何か機能を追加したいと思ったときに対応できるかなと、サーバーサイドも書いていたのですが
当分は必要にならないだろうという理由と、動作に不調があったので、乗り換えることにしました。&lt;/p&gt;

&lt;p&gt;リニューアルする目的としては&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;マークダウンで記事が書ける&lt;/li&gt;
&lt;li&gt;保守が楽&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この条件から、今回は &lt;code&gt;Hugo&lt;/code&gt; と &lt;code&gt;GitHub Pages&lt;/code&gt; で構成しました。&lt;/p&gt;

&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/banners/blogs/hugo.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;Hugo&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;はGo言語で動いている静的サイトジェネレーターで静的な&lt;code&gt;html&lt;/code&gt;を生成することができます。静的サイトジェネレーターは他にも
&lt;code&gt;Jekyll&lt;/code&gt;や&lt;code&gt;Hexo&lt;/code&gt;など他にも色々あったのですが、なんとなくで今回は&lt;code&gt;Hugo&lt;/code&gt;を選びました。&lt;/p&gt;

&lt;p&gt;一応特徴としては、記事の生成が高速らしく、他のブログから参照したのが以下の表。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;記事数&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Octopress&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hexo&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Pelican&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Gitbook&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Jekyll&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Hugo&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.86&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.39&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.43&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.02&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.98&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2.96&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.44&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.64&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.37&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.03&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;100&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.94&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;4.22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.14&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.79&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.55&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.11&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1000&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;25.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;14.61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;6.02&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;3.34&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;1.88&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;0.82&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://tamura.goga.co.jp/article/429818193.html&#34;&gt;静的サイトジェネレータの生成時間比較&lt;/a&gt; より&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1000記事の生成ともなると、違いがわかるほどの速いことがわかります。まぁ1000記事まで貯まるまでには何年かかるかわからないですけどね。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;のテーマはここにあるので、これを参考にして作るか自作するかどちらでもいいでしょう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;http://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;GitHub Pages&lt;/code&gt;はGitHubのサービスのひとつで、GitHub上のリポジトリにあるコンテンツを利用してWEBページとして公開できるホスティングサービスです。
静的ページ、静的コンテンツのみを公開できるので&lt;code&gt;Node.js&lt;/code&gt;や&lt;code&gt;PHP&lt;/code&gt;などで動的ページの生成などはできません。&lt;/p&gt;

&lt;p&gt;あと無料∩(ﾟ∀ﾟ∩)&lt;/p&gt;

&lt;p&gt;詳細は&lt;a href=&#34;https://github.com/blog/2228-simpler-github-pages-publishing&#34;&gt;本家&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;h2 id=&#34;サイトつくろー&#34;&gt;サイトつくろー&lt;/h2&gt;

&lt;p&gt;雑ですが、Hugoの導入からテンプレートを使ってサイトを作るまでの流れは以下のリンクを参考にしてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/syui/items/869538099551f24acbbf&#34;&gt;http://qiita.com/syui/items/869538099551f24acbbf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;マークダウンで記事とかを書くときは&lt;code&gt;Shortcode&lt;/code&gt;を使うといいですよ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/waytoa/items/4107945cbd3883f51755&#34;&gt;http://qiita.com/waytoa/items/4107945cbd3883f51755&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;デプロイの流れ&#34;&gt;デプロイの流れ&lt;/h2&gt;

&lt;p&gt;今回はOthloTechの組織アカウントでOthloTechというレポジトリを作って開発を行っていました。&lt;/p&gt;

&lt;p&gt;GitHub Pagesには2種類の方法があって、グループページという&lt;code&gt;アカウント名.github.io&lt;/code&gt;というレポジトリのmasterブランチを反映する方法と
プロジェクトページといって、適当なレポジトリの&lt;code&gt;gh-pages&lt;/code&gt;ブランチを&lt;code&gt;http://アカウント名.github.io/リポジトリ名/&lt;/code&gt;に反映する方法があります。&lt;/p&gt;

&lt;p&gt;※ 最近ではどのブランチを反映するかを設定できるみたいです。ただ今回は通例に従って&lt;code&gt;gh-pages&lt;/code&gt;ブランチをデプロイブランチにすることにします。&lt;/p&gt;

&lt;p&gt;今回は後者の方法で実装するので、&lt;code&gt;gh-pages&lt;/code&gt;にデプロイする流れを説明して終わりにします。流れとしては、同じレポジトリのあるサブディレクトリの中身を
別ブランチに&lt;code&gt;push&lt;/code&gt;する方法をとります。&lt;/p&gt;

&lt;p&gt;そのために&lt;a href=&#34;https://git-scm.com/docs/git-worktree&#34;&gt;git-worktree&lt;/a&gt;を使います。&lt;code&gt;git-worktree&lt;/code&gt;を使うと指定のブランチをサブディレクトリ以下にチェックアウト
することができるので、作業用のブランチと公開用の&lt;code&gt;gh-pages&lt;/code&gt;ブランチを切り替えずに同時に編集できるようになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo -d pages # pagesディレクトリにコンテンツを生成する。(デフォルトだとpublicフォルダ)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;このコマンドでコンテンツをpagesフォルダに生成できるので、このディレクトリの中身を&lt;code&gt;gh-pages&lt;/code&gt;にプッシュします。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout master
git worktree add pages gh-pages # pagesがブランチをチェックアウトするディレクトリ名、gh-pagesが取り込むブランチ名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでgh-pagesブランチにpagesディレクトリ以下がプッシュされます。しかし、この方法だとコンテンツを消した際に再び&lt;code&gt;hugo -d pages&lt;/code&gt;と
コマンドを打っても、過去の記事が&lt;code&gt;pages&lt;/code&gt;フォルダから消えずに残ったままになります。&lt;/p&gt;

&lt;p&gt;なので、過去の記事を消して、記事を再生成して、デプロイするのをシェルを書いて楽します。&lt;/p&gt;

&lt;h5 id=&#34;deploy-sh&#34;&gt;deploy.sh&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

# pagesフォルダの ., .., .git 以外を消去
ls -la pages | grep -v -E &#39;.|.git$&#39; | xargs rm -rf

# deploy用のファイルを生成
hugo -d pages

# deploy
cd pages
git add .
git commit -m &#39;updated by deploy.sh&#39;
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;chmod 755 deploy.sh # 実行権限を与える
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これであとは&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デプロイできます。ハッピー。&lt;/p&gt;

&lt;h3 id=&#34;ドメイン設定&#34;&gt;ドメイン設定&lt;/h3&gt;

&lt;p&gt;こうして公開したサイトに独自ドメインを設定して、 &lt;a href=&#34;http://www.othlo.tech&#34;&gt;OthloTechの公式サイト&lt;/a&gt;としました。&lt;/p&gt;

&lt;p&gt;そのあたりはここを参考するとわかりやすいと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&#34;&gt;http://qiita.com/tiwu_official/items/d7fb6c493ed5eb9ee4fc&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;さいごに&#34;&gt;さいごに&lt;/h3&gt;

&lt;p&gt;せっかくリニューアルしたので、イベントレポートやブログを書いていこうと思います！&lt;/p&gt;

&lt;p&gt;一応作業のフローはプルリクベースで文章の校正などを見て、メンバーのLGTMが2つ以上ついたらマージ可能にするという体制で&lt;/p&gt;

&lt;p&gt;記事の更新もしていこうと思っているので、そのあたりもまとまってきたらまた記事にしたいと思いますー！&lt;/p&gt;

&lt;p&gt;これからもOthloTechをよろしくお願いしますo(*⌒─⌒*)o&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>