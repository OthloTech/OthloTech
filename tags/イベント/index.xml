<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OthloTech -学生クリエイティブ集団-</title>
    <link>http://www.othlo.tech/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/index.xml</link>
    <description>Recent content on OthloTech -学生クリエイティブ集団-</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>© 2016 OthloTech. All rights reserved. Crafted with love</copyright>
    <atom:link href="http://www.othlo.tech/tags/%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OthloHack 2016</title>
      <link>http://www.othlo.tech/events/OthloHack2016/</link>
      <pubDate>Mon, 24 Oct 2016 23:13:51 +0900</pubDate>
      
      <guid>http://www.othlo.tech/events/OthloHack2016/</guid>
      <description>

&lt;h2 id=&#34;othlohack-2016-を開催しました&#34;&gt;OthloHack 2016 を開催しました！&lt;/h2&gt;

&lt;p&gt;こんにちは、オトモレ(&lt;a href=&#34;https://twitter.com/otomore01&#34;&gt;@otomore01&lt;/a&gt;)です。&lt;br /&gt;
2016/8/6-7に東海最大規模の学生限定ハッカソンイベントである&lt;a href=&#34;http://hack.othlo.tech/&#34;&gt;OthloHack 2016&lt;/a&gt;を開催しました！&lt;br /&gt;
僕はカメラ&amp;amp;SNS担当だったので、その模様を写真たっぷりでお伝えします！&lt;/p&gt;

&lt;h3 id=&#34;タイムライン&#34;&gt;タイムライン&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;時間&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;th&gt;備考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1日目&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10:00&lt;/td&gt;
&lt;td&gt;会場受付&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10:20&lt;/td&gt;
&lt;td&gt;オープニング・協賛企業紹介&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10:40&lt;/td&gt;
&lt;td&gt;アイデアソン・チームビルディング&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;12:10&lt;/td&gt;
&lt;td&gt;お昼休憩&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;13:40&lt;/td&gt;
&lt;td&gt;ゴール宣言&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;14:00&lt;/td&gt;
&lt;td&gt;開発開始&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;20:30&lt;/td&gt;
&lt;td&gt;１日目終了&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;　&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;2日目&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;9:30&lt;/td&gt;
&lt;td&gt;集合・作業開始&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;10:00&lt;/td&gt;
&lt;td&gt;中間発表&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;12:00&lt;/td&gt;
&lt;td&gt;お昼休憩&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;18:00&lt;/td&gt;
&lt;td&gt;最終発表&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;19:00&lt;/td&gt;
&lt;td&gt;懇親会&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;19:30&lt;/td&gt;
&lt;td&gt;結果発表・表彰&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;20:30&lt;/td&gt;
&lt;td&gt;クローズ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;協賛企業様&#34;&gt;協賛企業様&lt;/h3&gt;

&lt;p&gt;今回OthloHack 2016にご協力いただいた協賛企業様をご紹介します。(順不同/敬称略)&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;http://www.othlo.tech/images/events/8-6/company_logo.png&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;協賛企業様&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;ul&gt;
&lt;li&gt;(株) エイチーム&lt;/li&gt;
&lt;li&gt;フューチャーアーキテクト (株)&lt;/li&gt;
&lt;li&gt;(株) サポーターズ&lt;/li&gt;
&lt;li&gt;(株) Misoca&lt;/li&gt;
&lt;li&gt;レバレジーズ (株)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;アイデアソン-チームビルディング&#34;&gt;アイデアソン・チームビルディング&lt;/h3&gt;

&lt;p&gt;アイデアソンからチームビルディングまでは、Misocaの松本様にメンターをしていただきました。&lt;/p&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/jz0G5H6jl7dBfLIUhdpg-qqfJKqcSL7YXF56WcW8tVx_oojS58y13o8bak3d3G8SYzawWLjDWiXrXARMFUAhiA7aKjbFQpn5c-xAdW4oIMHKLTf2AyT2SM9MkbOsnVTYQzSjDdptJrlaCD2SLJbCnvUZjXaaEpKGckOMmpB8AptpB7Ba1dBwHIzGzBY6ZCfzXxbSQsTho7fl95VOp_5E8Un2FRqvi7gi_EEonMIgGOCHIkMpGWUuOqi_tg0YWI14etf5mSuCu1FpPBId5a2d6ZyaKp0mgCHbKDQTgZGP3pbGPrONhIfvokszw0xL2BkWQkaRO_XecrzruVv0-3aK8DGWYWMBNSOfF1-bEnm89BZ9PXw3xAKDhMZYAQTpgnWOkfa_Hiisd93ACwuiLnltO4-VgoExYQR9aT64KNureuFeN4J4dP4_fY0S8z1P3VbSsfFxCYJTV7dS3-tBH5E3h9FZYxN1eZ9RARZ44k1gF7srizDCfD8S3Es6Fp-kGqdp5V5aW7fQPwTMtQbUpzjRNqFvDcPR0-B7zCuhYjkfQn9WF2_NAJgLYtcfyVIhFbH2cHnE9nzytMLzteEV1W2ladKkeKmKvzxuPDpzsU9suZCMeaQp&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;チームビルディング風景&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;



&lt;figure &gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/FD5HKxK7Yy18GBKblKSGG_3HO1xwWXcQqLbB5UubxHXmTwX_935ozUVuOVSUdjaMdSJ-A7GeARAnOKXwwY2n77Z5ToykbqDYbzrs2G4AYvCSBILpYirowPYsmMovu2zC2m7lpozJJ8zELftd4xfAVK1TiN4prNqVyH1jF-_Kwdxp-U3I6ManNU8_8r8EuKrPi8GK-ojl58bUAeDut1ogVZZp4XxDK4u0QLUrAEa31dmLt0cKmTbg1lQe2K36FNG4Q--mL3eefjck0JR-BAmKHvmHJVc6Wa3NvlIwA_BL_nuKuL4WDMCoAVQbo2QpuODT9jroxeyetPOAHCDI7CvHy_UjWqEKjD6ZRNzzFwYSftpqKtCmrzb7HXweH9zUEAwwCKIlLaj-Y7UO9meDbKXBs6SHAISURxicMQUlgutnTUtH8j67NWMmzlPJsciKZjseYGXmQfP14ZcZeR6GEu-j49ZFoYTwN7hsiStbPkZPu8TB8b2Ez1-d9l-mz2nQVTxPP08fB3uf0l6ri9jVQ_RRoVWfGLFqxdFOLV5zHF61e1rBNXu8C07ko4zDYQ4VP5Z-NQxRUogrBBiF9f_TCTeSqkiJ751seP0EH9j01hM7UIKdiqZa&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;チーム開発のアドバイス&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;アイデアソンです！&lt;br&gt;モデレーターはmisocaの松本さん&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/FlsvMJx94V&#34;&gt;pic.twitter.com/FlsvMJx94V&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/761744963927367680&#34;&gt;2016年8月6日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h3 id=&#34;チーム紹介-昼食風景&#34;&gt;チーム紹介 ＆ 昼食風景&lt;/h3&gt;

&lt;p&gt;チームビルディングを経て結成された6チームを紹介します！&lt;/p&gt;

&lt;h4 id=&#34;十万獲太郎&#34;&gt;十万獲太郎&lt;/h4&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/RHAuKyk1D0BZw_asTR6jueimW1VtJVuB1_hc2h1Ow8wLfUuyO-qg9A5cswuXWO3kzw--18Gh4mvoHvjJHsOJhWwPCHL_UBdKuTjp379htDCjEQ-nkQBuFpqB1GhbIcmJQsMURZOJRlcsFiX1BRyQyuUJYjPIICY74jFNWcrH_IN7apsRFakJWTLrrOLuliQQvNTS1NpivZwK4Ik7tZgSreT15JOb2wKSXb3zyQJseei3xNPdknr-KF1H_xaUUYZVvTxm0BSYk5yp-D1bH0f8sTYfxuHSpsKm8eHu2JZAU2kX5pgyf-7Q2MTmfxlBKkJ35qLBzJoMNhLX1njEWv1m4lW3AV26Tp2nnWIMBMjEGPgON-A3B2_CmTy7aBxaxtDz0iKV9q7vYKoBEUuOktc-y5xytoGtmzQzeSn0uaX6PrQ6FFjQ050k2B8zb8xeG4-b1gasQliCkYLNJBIoytCa7qO5u6eJzuwFWcCoMpTMXc0H2hDTSWAPQBIFuk_FBxHnEWnBPYCb2t0Tp6tJAgLVGaIVuwT9szLgRj5L0CBYVSsvsq3cXQ7IaUTVilJsyNK4bruhe3ML6KFc-Gcb2_oWq53LgfOYQZJq29-nFEk4bQeDi_Az&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;十万獲太郎&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h4 id=&#34;ぼっちめし&#34;&gt;ぼっちめし。&lt;/h4&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/3qOMXoHqNGuoolVjOALy7Lyl62576U6CK-UD48pLgQr0yMgYHC6vBf8SgMJDYa0NIdCE_YP2Sx-2mN8vNndLcBm4NHJFsY0G8sgUs4vpsIbUDvkoQlbmusKj0uyGHfI3dw23rv0L5orWnEJFfppJeoZZ1yDWE5Z3GwBG5-Zu4ZFThbiw3cQBovKdRVfpqnwszHAuXw3AjXj_DlLLrPpmixQ_txdR4DCtnBRBKghbotUGyRRYFEPcOu1pUoQwIwCN8_Mno_hhevByE5JyJaC4tEObDkp7wq73s7b4ZmKJ28Sb42u5SbqZ-7GUvvNpkX57X0tsReHxIIVVaGz5yzWd_1mvjPUEyVpaGGh6vxsz-etSc1iFaLc1NGe-uMXtEu4vqvneiARphxggUyHfeGouEBrNCWtGFDCra44wTv3QOWUCZpajyk6QBvjuY3-k4iGvCaeT3i8R_w0WMUzSrWqXUBGfXgtNfDp3s7bm-xdjxq9UZfZ6MbH3aSOIpcOjmN9fzdGcRzOeNipT9t5MnQ_v8HzXTzfFBb5qLabzFX7pv4pzTvAFLVrGG12VvRZSS_1LIzy87ExRsXMpv7X0bn73yi0rtzQzzmqc3GUSiMHDeOYLQbgB&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ぼっちめし。&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h4 id=&#34;えーちーむ&#34;&gt;えーちーむ&lt;/h4&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/8nv4cR2Nkjax-17zMMNixczu62mms9j1q0CoYsH2pUSPbfi3GETtlb07gLSe0wTlkHUsLBXeYG3ihDXo0nrjPGYPQD9g6lHh34Cdzw88lo7sTO6cz1QtzqREvcGfcRaLmYoTAykTHgffMz7sGQ_uhl7YzqKAS2GMHHOpux6b1Xu3sI9tDfwnaPdapmL8tAUkvJ5EgCBpyvpAzilP32-kUX0li4RNysbrzJuTafV15N_G2MQAXFGgo2Q7vS2VPGCDO5hIguR0zneA2AwhyyFAYe1pzpFgbPP8EHGfoaT-5_DKh0cFeCrAJ3rfb_kYCM6DXsCPkQl99xOZu0-Pvpy7V3nUOhAkAQeLECOWhKF9QygVQDM-lYQCwJpIS8HXISTod_qOgHK5LoTItKmtvdcOWyMLBNhCgu455CN2HWcZ09IfFV2LB4Px7CBJp-_Kk9Rr3wci-lL4IyBxFBX9OI-VgnCPsLPyBeRj-684Mx7K2GjOdSq8DjufoJDuNrKcBINvlUFa8Hhtpg25HVd7rReoAUXouO3mduMZwCyfbGFWABY79NXi3tJkQKYp2DV4BZFauwuV0jUUp95ONThj1AQjrxTyratTncIQy4rcvS9RcepN5GYd&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;えーちーむ&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h4 id=&#34;その日ぐらし&#34;&gt;その日ぐらし&lt;/h4&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/BYB9znMQCcS_SpMeWSk6ICmF36NYSuRQzRQgIAOsBTypc857H4EZbIicCa27tphx19nQ3LGUVj0UGnWRBc6Sx-q2hJGQyZQv_c-yRKBkpffupqgNarMl-rVc3Qsb1JgILUXlCkfJr6s1dyGPR4FNVtg2RFjW5DQR3GS6QsqAIkesF3MK_C8SYTJGcTJSuRE_6GAhe5GEJUK5cf0kK5_3oZPQ0C42EmurImdsY0wjVELyfRbZ7kRsZA-XWmmzMyoqWbpq7iE7Ydg2CQALFPlwqGneNehHQsNaf-xmw18YHOEr4l20wlGam-fkrgRvNJHTa8Y7Kx8ahM1XlYHolXxBNAgzz_76zlHRtXG0sTck3497N4HQQmHxyd2g4WoHcyQ19NBMDNzRWoxuHFYIneyhyk_LBsNdIEajBKN9lFY1Q8DwGk7xUPgyROZj9SrcjZnNqCygqDGQiVxqLfT9Lw7VXVhaBzO-dNtojNMJFdGExa_p_cN1M4Te9uN_olmYBRBLS6qzUftkR1WypdGk_xOKVhcbwQse62nFHtZkg6RMhPqAM-eBioyA-INRIVi05BE-RwWpP8oyjs6WDNRFZOhxg0r9ouCvvjOKgbuCL-h00rVJHtQn&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;その日ぐらし&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h4 id=&#34;ダブらない&#34;&gt;ダブらない&lt;/h4&gt;


&lt;figure &gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/klSJPaXA1v5EvNO7qoC3ZM_rWyIsVWx_hSSSIjo_J8MFgd3UMlX4y3rZC_KM0AxDnzWIs3k5XmnME8y3N7551huaIAgz1J6c6_NPUFXjbzI9vRV76sfi7p1Ws3JqzZvLciwu3VaX6bz3K-yyfzwj4XNFnDLxojGCUCOFXYN8VKem7c40i5dBnYahzeW2tWPfK79HSVz5tD3jU5-wcFAyFbqv3hy3_t-QTpOkUvVkoB2xrc29feDR5F2Tf7j_iq1onjTlfmaFnDYOp3B7IlpEhPufhUMmkDqysuQhmkqs4dO2E1-b72bfWe8D6PITwagBwAVrpAsahYenxwQW119K7fGsJhF4o5MnbOwCVCTBiIlJF-C5IqvatP4NullGqqBk84qNqOygkm6YCOoeCNRyr3BqwN-CxYJOrqpEV-74J6LfWO9ILhI5mN9qKDZ9P0vWzCV7m0wftBcruFQXGtJqpYrXVTDEG5wJze9_d_ALfMlU9MWIoBWcXho6k9cYPtU2uh1hkLTn5TkaT3HT5zJy84PD7gJAzG3ik6ZTsyj8qZw_G0MlXGib1JenhXwCgy2uB-Qbe-xPq4-ozO_aDQ3w4DLudsHXqPX1kykQV_ovN8iBxrIn&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;ダブらない&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h4 id=&#34;女の子&#34;&gt;女の子&lt;/h4&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/OlT6SmYbOrhWjn76S4WngO7SgPfjX6d3Ho0w1RtHBGD2feR7OzBXO-42Wq6ay6XmIcfyoi8kuX2r3d2S2GmTsJsq0xMlf25NuNB_t3cNa43BLVo-XtgnEJ_vUn1wb1zvkCXJYioqq0B5EK3jM5FK12199DBLZH-iSbYqEU1pdauhs-aAlbi-o-pR_-vx5Q-9DQVz3gAWBLiXC2BwXLz38kVWJ4GBmSCHXrX6P8fJHKsh_FuEPck4JFwWVI6hAzm2c-fkgXx4G88PMPT46Godk4qjTx7O4j1dfdv9lT2fllaItEaBKD76Du-CQ_vXNsY4TrIznxg2m9VhX8oiTKv1gIiWf8qUDHaDhWFV32pwkeH3cEqxy2xTX5vvvRTONI7vvzF3Vyg3ry-_ri9to57sCzjqp9aPdizQxq5_p1n3Hl8ejJtc_MuX1_zP0t_Su4-RB5s3MAHMDEPr-sVQSebmwzFOhGGJ2iDqRi1ziS_bcTs4ve5BmPGCknaw8HUWgbG7q7YFqwNr1PK98PpdCxSjVhY3exCZ2dmSQYTgqtWa2O9SBQ9OStflAe4kJ9fRMfNCETvi3qPrUiUEinUkmUzmiJSYfc54pYpP1jcW-r8NGfYo29uk&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;女の子&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;開発スタート&#34;&gt;開発スタート！&lt;/h3&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/tEYHjl2AvzUemyDaUrc-rOUdR9vkrtDU29yllwRdrutM_LM1xk3pF_QXC5NbLTGD3Ci5qCD3ZeoUxQ7JUbSB14Rrwzp9eamASbFAk_B9dk7SBxdNJS1tMdayXyYkuoQqPj64kpEmh0LJcQLs9Oj3upkdVnW-XdHL8C460FYCVfOAKuy6SjAWv7v3jpviJFrYF10-vsbpqw9KWxpQ_ioK67RlMMoxHWlMV86e7QEn7JBsWd7PRygRhGjQnlOTclI6LdBAS9tWZzJyhOOlDq1yWskSUNi6CHiliAlE6ZYm4jD85DDHUu6ng-Ej0DayzzhifPOhR30WOin0fAP2ygjSgkUu_0bbbC7lEfWiG1v6RB2LrQ8OvF5yvQxQLcWlKC99TFYgfn931YubDxAQOli0spjqEYqXlvy-bWil9oAGI-eNPP9E-c_cWyKXkWjYekeQp1OK6y8yMWnvhxFEjaXenrhMRloGDwlcb6RX6ztYOG5z36XtQdH1k_f28v11b9lw9J9Y0JBY2Bbo5-zYy7TfqxO-PKzq-w0fu8DY92KXZ6jN0skSsygpCVbS4k9AIlK20_vnjYwJgUoa4BGzD-RKTXqX7geiuqrS_SDIknqDwNIwzDn_AQ&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;開発中 えーちーむ&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;



&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/ZbZy0jetE-5oXxNGKqL8arXLBiOhenVWsPZAJBcQaPuoMF-G6hsfvfRxOGLBYL7Sche_1dGThTVCKImYmV8DNTAL6-ItlrcQpatvzwPHdLa-aO1VoBq5j5X6cQzY6VYDc3VQUbDTiNJf7i6S_nE0-_gzDOqhtj7DfeevZ9PQB746USY6hkRgvllU7lAUwi0mI3mDOGOReLp1TXWl3rdTJGMYxGkr8Si9Z2WZa7fyfTeYHlsEom3e3q3EIPLqBEHT11vF7BsmIeRu18dOZohlg_S4LRS8Zuob9mQKGoIhLwn7RvDBWZE3zvyxE4yCEagf-FhMtvO_QcKAnYTABST-lO0e5UmrCH1_YMr-xz-yJaeEFPwIf2GeeKjHl--g9z-Kdjb0-By_Yl2yw3uHDDKXe1pEca6V2LxJidSIVTWrZph-j98vpGyZtcGPoglGFgu27v-BqJo7wGFon0ai6l-GF-j1L17BvesjQjJcSF2fVXJk9MzorC4hLiX89truX6nPTwDIMMZq68T4DB4f_fYiLABHhQHRVkYPR-8ifjrUrlNIbKLa6E1XHPLcOBaxglDkVPMQA7UpAmG6tTzG6Chy1vnSSzBLX0AsLnJj4ZkyVjIwYrkb&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;開発中 十万獲太郎&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;



&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/KTwPdz66yke3XYFuPSgYcFIgm1NjvI7vcHRZMu2KtktZrd6r1t8DAuQur9Dg2L2ixQj2Q6-WgZxr9po2IxMQhKHVe1bJZBVlND7cw2OSOj51Uj_JkyQhfx9yDsVZshYZPqnhDW3ecfVOC4n3UIPVqfmyThbFEBN23EbFBnFhh2r-0aAemQ3q7Fq6ilN3-MiApP-lkPHveRk9m_ZCEYJhrJRV6pABXyAWFKvNlJyVkKUBojuXWLnlpvrwWazpqJeIBdTktyXkzVgXcJ9V1g1MDBOV5FekuSCq6-xHFybHp_EH9k7XN0KjDc9Wni9k5BfReIc96YUwzQEgnm1ZdhDgTL6lXqUmOENUzCkB171vtUEycESRw1ILRj-DHmjJFw8E0ItUBLIc3wWsLV261HFnXRekoe0wcnkjhsK0w-ilX0LmpnRz6JmyWXVtGRr39YqR9VgvzlGQ2caO9lhsQNrK_4DoFAzB5hRwrim124a9SXvLUFRUsJCcGJYZ0DN0IYnUCE3hP1evnUWtku3yPCZwWzmqnekLYloe8hGBFCAil1vXQqVgDJOftkDEtgV0QIFaLoDVSaUUN76NlV4ZZiMXee-Yp1BmCeQnO48zTsUISjrgjG7z&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;開発中 全体風景&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;エナジードリンク投入&#34;&gt;⚠⚠⚠エナジードリンク投入⚠⚠⚠&lt;/h3&gt;

&lt;p&gt;OthloTechと&lt;a href=&#34;https://givery.co.jp/&#34;&gt;株式会社ギブリー&lt;/a&gt;様より大量のエナジードリンクが届けられました。
&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;君はどれにする？ &lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/nZdIb4kskW&#34;&gt;pic.twitter.com/nZdIb4kskW&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/761848240144654336&#34;&gt;2016年8月6日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;───“チカラ”が欲しいか？ &lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/S40SNyhcW0&#34;&gt;pic.twitter.com/S40SNyhcW0&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/761851155517362176&#34;&gt;August 6, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;株式会社ギブリー様より差し入れを頂きました。ありがとうございます！ 残り2時間。&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/Xs05SYqdFP&#34;&gt;pic.twitter.com/Xs05SYqdFP&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762170114397630464&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h3 id=&#34;突如現れるスーパーエンジニア&#34;&gt;突如現れるスーパーエンジニア&lt;/h3&gt;

&lt;p&gt;運営側の「青空ハッカソンをしてほしい！」という想いが届かず、当日の気温は30℃超え。
代わりに僕が暇な時間を見つけて、名城大学 名古屋ドーム前キャンパスの川に浸りながら開発しておきました！&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;スーパーエンジニアは、働く場所を選ばない。&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/wMvpe7look&#34;&gt;pic.twitter.com/wMvpe7look&lt;/a&gt;&lt;/p&gt;&amp;mdash; オトモレ (@otomore01) &lt;a href=&#34;https://twitter.com/otomore01/status/762137872556109824&#34;&gt;2016年8月7日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h3 id=&#34;最終発表&#34;&gt;最終発表&lt;/h3&gt;

&lt;p&gt;作品のプレゼン &amp;amp; デモをしていきます。&lt;br /&gt;
&lt;strong&gt;『プレゼンを制するものはハッカソンを制す』&lt;/strong&gt; と言います。
&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「十万獲太郎」の「トントン大相撲」&lt;br&gt;完成度がとても高いです！&lt;br&gt; &lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/dPfHCJqT5Z&#34;&gt;pic.twitter.com/dPfHCJqT5Z&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762222103374376960&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「ぼっちめし。」の発表。サービス名「みんなめし。」&lt;br&gt;ぼっちで寂しい人達で集まって食事をするサービス。ビジネスプランまで考えていてすごい！&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/4OxqohVtXd&#34;&gt;pic.twitter.com/4OxqohVtXd&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762222923482472448&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「その日ぐらし」の作品「School GO」。&lt;br&gt;講義に出席してスマホをスリープさせるとクエスト攻略という大胆なアイディア！&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/d7bSEAspoy&#34;&gt;pic.twitter.com/d7bSEAspoy&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762224263327649792&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「女の子」の作品「COURSE MASTER」&lt;br&gt;複雑で面倒な履修登録を簡略化できる、学生目線ならではの実用的なサービス。 &lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/N7NqJIGo2c&#34;&gt;pic.twitter.com/N7NqJIGo2c&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762225968215797760&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「ダブらない」の作品「yattoke」&lt;br&gt;「学生のうちにやっておけ」という先輩の言葉から、webサービスの学割などをキュレーションするサイト。 &lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/8OhyNWYd1Y&#34;&gt;pic.twitter.com/8OhyNWYd1Y&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762229775729500160&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;チーム「えーちーむ」の作品「chatbook」&lt;br&gt;講義に特化した先生と生徒間のチャットサービス。PDFで講義ノートのように出力できるというちょっと便利機能も実装！&lt;a href=&#34;https://twitter.com/hashtag/OthloTech?src=hash&#34;&gt;#OthloTech&lt;/a&gt; &lt;a href=&#34;https://t.co/3PMym22x85&#34;&gt;pic.twitter.com/3PMym22x85&lt;/a&gt;&lt;/p&gt;&amp;mdash; OthloTech (@OthloTech) &lt;a href=&#34;https://twitter.com/OthloTech/status/762232969096368132&#34;&gt;August 7, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h3 id=&#34;懇親会&#34;&gt;懇親会&lt;/h3&gt;

&lt;p&gt;作品を見せ合ったりと、お疲れにも関わらず大盛り上がりでした！&lt;/p&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/M1Rrng2bRJsjWoZ-vIi8J3Te36Zc2E-pLTnx8HCcOVfsBV2-7lSbHm6rih4aD9nb_1HPpn0vN5j4iHWYmyk9qOb4ki7J21j4Avs9ym4boOxDx_YrWbRUOhoeLRxbDtpvk4FxN-JEBOGCCDjLAGPsLGqX6RyMQw77iSQCFKbzpva3qaat1eF12FMxI3tRgdVACw-iSkFcMYVG7nXHsT1wmrwonxyuCtkVffddRtsLhtGIWaakg8no_FcIHwRd6Hd2h0DdMLA0Bk1xPVbNxhglST7EjBwpdFF42nC0LHaWVn9bOy4wGqZwd9IVALprqgqM3R_NpyT1djAdCssqEAxHWuayUDQMDb43S7bfowHHDUYb2Ppe-0cLEatH28o2j6wJGD0fsOj6fQaUe-n_Of92UDtYD9VQ4wUCwAw_prBSfxA__yn6zXgrgIPrpgp4C0wKnl1vbBku9F2hp1A5KEunYDwSEBF1_h7b9fE9BowV0vd2pte6EhqZPX2zrHVqXLNBV9-vxzDCiQYRlFJnGqhgmB6WLgo2qpWpQnWwb-Et1zoS1DH7Hp93YuGbTbv8QyIH5Yx_AzvG029Q99urJjPFR-wprVdNtOavD__lIhJgc6NDMXSc&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;懇親会①&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;



&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/k8_JdDpdTJ-Qn-7SUdtWI_Z0m5YoGlzBwpqPSQqAoV1-h549caYiTa_6KDrtPckm0LgV4WCYbvfoS70yxQdjAdI5xF89LRjH0wnP_lfYgBFdrtOx8CBrLrsZx0YrKJ_NM8uDqQTjl-Kf2-x3v4yxob9qz75_zL64fUknlbNqpAVruhaoRP4Zqyh8XkFQTOFLi-D5FCdPacPdbqg7z9EwUr2DozBpFmdQ4jmNGviznMPfayFmdCUNDVrtWDgXfPNLMkwVO1mjj-Wh8ESqlodDa0BOtbvWCz61H09ObEdW9jN_Zv1CKDAunVRkuxHs60022AzbEdpBgLe5TSBAfSwr_7-6wlb-_z_dW1KJ7Mtm75RoFvY7I829_S6JFZPaGRWYtHzSCWb7BMkKDccoNUt518Oi5rSmAu6xhldtEqICMvkdu1zyqM3uzaLOQRxX9FOnHF8AZOrcc9jX1-klshaikW8zNnOnFOiK3zgQPne295y75KLPK0z6Dgk2Fv-d-KIQSa3df3y4aubmJ4Rcr62kHD1uM6tF13QeG9CvYyoIxH2afgd7Zm4eLBqok03rS1btZtMpc7vNBZygjOW17N5OMLv92in8tL32l6_zMNvFuGwwO9Qu&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;懇親会②&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;



&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/FGpWRDsWhFI3jmjb3oWobj0fhgmX7fZvgu8hzLijs_0ApC745d2dV48DnmZopaVmZnBWsqPRF0HTTXOFXCuGD4TTzB2VGYZA9hYWjJt7rhSaBPPbvHQeh63kvfp3sGiy7eGYVCf-MYz9rqWawdieQVTvhKhOQdj7SUWCdPIICkblQTG-QxJhq7cpdOArS5zfQ9NaL6dp9KLTr6jQsYnLOFBn6gpQ0zBfV02_ISwn26Pq0aQU2XHSmM0vBqMLzhuvbBBC1KMh6Zzj1XspEO4ZmHt7xrmpwWKv0XwKjkA9Dr4umbUYIRK6oS4R4dF8CuNPg5ZK1V_GHH1GjyYRkZOSRS76g56sDxjbgzvCtD6jEQ1OHjTpnIhiQP80v8oP6mihZ2g36976E2wEOU5ZUUbrdoi5xHKSf1HBw7CJM1aTUhL78t5YmgwAARz5Ex1ALCX6gSOKvRBL64EA_RjV3HB5-Ise2v6gzjh8bvXfhnVMIC-jYAItjwIN5XWk1cYYhRytIgmdJ9NoWfSPB4lGzb7rBXKvlwdi1Vxw_fVc8yoMdvfHEA3ovj61zDK4nAz7bHVofd470qtJNR8uuN8RVS9tc77kQG7JFg0jt6hyPDa44IpaPV-jUw&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;懇親会③&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;結果発表&#34;&gt;結果発表&lt;/h3&gt;

&lt;p&gt;エイチーム賞『エイチームエンジニア社員との豪華ランチorディナー！』を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;えーちーむ&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/sqif6S-2Xx4Bvxp0xMIxCWcJ-zzeZsMtOyxteLXB6GfTfdYBRfIUcG7gMR6kPJMbomzY7LLfenHIK3LqMsFp-C5dQLRFPup9p82EyuEh1nN4goxcwpiICl3ZOOMkIYGTR5GZTLhZdDmcWfpUfpBihDTiWJhZLe1XlSDDNO7QGNWmrwe_Kukfc8zEdd37TUtbj3jgFLg586GA5nF7iso4AXTm7wrXeIRFdidNgc8WW5Fc9XbsM8OcqIWNNAW65m2IP6IFJtFi-8EftzZ5W5kvu1ZtvcVqbzOP95kXxcvg8nI5W3kwHyrFUDpN7fb-eo6CaNBnPuUywNVLEuF0Uoljpx_kLATedj6DVg7y0gte5CIpYEXzS2WZF70piFPQ2H8NttQCEZvIile7kAexZY3QF20HrLJYWEp5P3rueUcdFrwWdyU2XZaILva3Cn8F_q7hvQYUVneG8EvI20IlFnqNgFzpXlbpOHMgrspAU_ZrTYJN1rOEq_hCGSgwKkQnxdA1RzjV4GSzPmNRCcvMMK2XVb-zB2c8Q3vp0JT9H8L1_Rh3NuvzMrcEABefC_cPCh7AkV2sfDfhaM1PG3GaUaITvnqX4We2t9eu6fgIcZ4jL8aliwwf&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;エイチーム賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Misoca賞『Raspberry Piセット』を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;えーちーむ&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/K9Y-6I6PXiLQNkdsnntH_OjvXE9zAsip48WgpUBmUts7UZBHd3KU4wpHZzRClHnd7My0bHCtIAkWRiCjXnP3wOPM_i3_zNkgFCy1T0ejSXKxwBHgpS7MgHnYyaYgKYZX2v2bkdimWFWe5jzcJTIjAsqvoA6j4lMC1irKxAKHgd5JvckbICzv4ccMq3PdBV-Ow-285GB5wmaqxe2FUnC7h_eYaLEScjaZf-nVGWZCwmZUdasAlImaKwtvAnV-le8OZCbIHlW-0yC2yHumNue1xmRmnOh40JboeWbh6GebYuxxQcqjbJ0f6UCKtMLDP8Usg6zQgel_Lmof3vvi7V4R_jw8kRPSkgMH___5dXFIoNr4zzYdElKm_uzdUasL1n80vBHSNWpiw4n9YQ3u3I9IKPaNqFVoqwUd9oj8-yg30wxwG2HEJ9zQXZLTaw9OxS3HH7-f8zmCkT0UJm7y8wX_zEZv8lc5jE2HuTqyy6_A-0eDxtRAGgG1CjNsgpssQqrWuIuJJ5mtE5EfF9jv6Z55spsdpygQR5liG00ydtnn4ph6-BjcQkrPY8phh2hlwByqyNMmGeUNv5FfDL7YrSEwdSdbNybGpRNjY71_2o9wk1EkDbhwPw&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;Misoca賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;フューチャーアーキテクト賞『加藤牛肉店 肉博士あつし一押し！自慢肉セット』を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ぼっちめし。&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/-61giV7lX4IC2BgYemwYcipgDifi0VWESXmwnyQLkyYKKyKm5wySQScpOJSRC8RH93RzDtpWL3v0mWtHz2J_apT-s3RaAHOgYulyJMsgPJHdegBtkBvPvCAvV8Zrpo0mmpVtFHoN5yvilhVAK1aMfWws279qBaGs_yJtVJZSOt2ms2yISKyL7a-8p_CYB0_wLyRC_AtxjCS1L-xytoe7CxZv94O_t1dKjswXpHU85khYZOh-ICUQy1q3VyLjBANre6CG5U9c2_weWGCCKTT0jMHE47joR7ik1c-kth7EYQjo9iH9ExsttQeeO8oSHs8feghmNWCb6i6_Fp-9v3wri_19imjBNDDzIgH1hRfNspMySxVG4e1V0GzWescT4bmuiqkMmm78myLxm4f1T1fZoqRbWQpMzvQ60ZlPT4yW8E1fEh6zYmz3rXJceKK_3TUm7e3em3T8-7VQHMhE4qKLovOmn7U7-DdVm9AK8vtBwFZbnB2QwqIMMiiMwaaLw92-pcIY9px0UxzXmpo6sf2IYrBXwvV6xRgY1rqnIWj0srO0uvCeipzWz7T65d3TIiILYZEsjqF346MYlj-tQnFyO3_S2_pLG08MYHfTQRPOBJ0KK2E_mw&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;フューチャーアーキテクト賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;サポーターズ賞『GitHubパーカー or Tシャツ』を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;その日ぐらし&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/cGdhdjCsCPvHm838nPv5avXaIiMHbtdHMPHAqD_NokjaUWrYgEs-CtNiLIykWIbfX0WPHnTSdeiDymEXXKEU5GHKqu0teD_4BXfgivSAJ7qBo8U06rmcDr7GmPKI4VkI5zUIBL_hXpp9v7hpLZRJn2nXrywOVLuDo53FPdmjhGvnYkuTd-JgU1xpxYSMLMB8jE4GvcNt17dTydbeCC42d6wFuHGL9bdj8eGSBBwNExHXSAYuzow3p5GrNGr9ed7QN_hW0v0fW7lh1FPQmst5IVwgRgxDHdHsC_0fzDbQCGuhoBLvQrrzlBW1qK9k5bBo17Nn8V8VAvNPc5gZ1B7e6NrIhSaI_l44zZQMEMlAIN_A1yiegkIifWES3O0R1Q5_pqBDX1AewM-E5ZJb5XfBKrt9-bKqrJ261zSiopuN2pE4y7rPvq0YstaSg2Ps9wqva0VXhrOH7DRs1FP8XxmftRMA55tivndKyiPm2D4ixG1PKgpunVvDu1AkwTbfQd7wYDud14sFXSMUiK4iHaqXdJBLT-W5Z_OqcwBnEEmvD6hGcAd-7NExul6MrmS2ppMDOePurFNxQgJmJfAxh5ytrkEYz0zucRPsYjHpuDY4znKLEP15&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;サポーターズ賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;レバレジーズ賞『Leap Motion』を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ぼっちめし。&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/l10oo5nn5aT-saKIFMoxnk0AWNazma6wA4Nu2kxozhXeaCCHQMUuHqIbsdOPEGX13JcFC8gJp2wtxgT943lOxk11tDZHLHF4O6bOkMWSqVOxOoYrwoVUQgRvsX3ydbnctTeVIXeTv5G50-zWywJPCy-Keb82RYkfcDQIHdzQ639CbP4xry0phqWmNkNNbRPP9oPWt87NqYfQ7C01mnN6mugpPQm6HSAW717M4Stp3--M2q5rrmFuhw2l20yFUsyFxYsxIKKXHGiaWEBgRBhoYMpUz4RYHyj3bqf7tGKuawj45I27EU4yLYMVk4Mw9M1q4AnTloKbXyckTpwkMtMb1y3urtsKlsGMy0GXSCV3-D9XrwDmwL4q36Zc5mFXgRcl1VvyzIaVAPTxWP9vIbDXpOOYg7hrXPDVCZJRH_U0ch_d47_ClGz1CRdvA4Kn1MmJdSVFTslKjlFHlv4uUbb5Gzq5AC7Hn0wLqvEH6Nh5LxSJEo4UKmtAfhs-FbDBZzePL0kQBepA7wX41sTXduEDh6WLn-dEGfDb5wFsNOUCbLXX1fB8l_V_wMrSwdZiOU_ecgP0NSx6RKgOozY476H8nIsU6gMovcBjCyw99jFiSB_2OWeL&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;レバレジーズ賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;そして、OthloHack 2016 最優秀賞を受賞したのは&lt;br /&gt;
&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;
……&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;十万獲太郎&lt;/strong&gt;

&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/7uFXMaP__PDtM9L9JdZnu-V_JoY2aeFKyZGph4I-4n9Fo6S_3FJab-2KrreI8W6OPMT635MpOnFHfBDQhfrX3O34UmYjNEGzs_YrHynBovNn77NMaiVxREYG7uJWpEOnouttoKAz0ozZO5l3G3svAQGZ9R3wE8sMzXQ-a7AHd4L_H89z2zDROx9i4h0OoKVZmbvHXsgbqnF67Xipqodv2Lcg7dKOs_qjewYScyRJt7Yxk9vwS5eCT8UEFgDn2ecmQm9mbGw_vqM29P6NujJoIlFbTfeaeg8BRT3sWGasJTAbd80VqPHt28k5cPG8q1RVzvvTAjGpnEf7aRO4PW3MHTx-9jg7o1sIHx6O8HlScRhNUjVrfXld4521MtC4jDrKLkFU9rh9HcPzsybzQFWTRrtqsSMURnwZpwv49jwBmkOE6AWQ7W1W2DbiAX77zzk8UnNeOr9LmCH_dDeiN210FYFY9u3vZCD8Sm-FtTsDgqWXsWE7xg6_kmT-fiPCTiwxS-qY3dPViXpBC788rfMEAgZoMZ-1roxTs5dFNuRjLDCCErbFawwGb8PVlLXEn8gMByZ3GjBSBwyXsbjMia53tM1yScalacl1G2ZEEVC6MnfLpOpF&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;最優秀賞&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;チーム名通りに十万円を獲ったということで、何に使うのか聞いたところ悪い顔してました！&lt;/p&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/qRTAvlANsMdJAY5QE_s3AF8XGpSXa3et5dMVvesM6nk2jPVFLlwNQiZ9HRQBv-4X1wYhI6FGQSepftba0xHVy385tNsxDfPPp-hs-qBXoT5HBGNoaZcNIW11Hp4sFouoxQrVpL5a7IL6cpudO8aCfbsJ9A6BkxnMC8IJud_-FW3Dm95AOxc5rzD12PcEurVkYQOGnRdZBE0bG3HX-ZWPmwbtBkvDI9EPjm-t6Cg7HcdktjNe7HZbvY0jzlU4s3DEZGSnEpMPykKHZbifT9QgCBkA5-Ib87VEjVD3A9GYU_cG5x8RobPkKImBofoi89VB-9r43MJJZk856xhp-yiolPYnhdb5g1-TvTAO_GCmV8pMRB2NmvCrapE2KostyqWGB8eiw-L1emGE6dYEL4_MIS4ldbZNZz6ou8cZawdJSV1vUs3ZG438KPKE0-Z-x5kxnj7WTRwXmTI0HWgQMG1rZCwXYw2Fo1QKwaFseMv_FxtIg65NqiDPgXliaPfYwLDuZnaeP7RNMaeZKoGXbHgveuEZ8koFfKdGU3omJi7TKwq8Xco-6cgoWnDreDs83boPRipN2eqJ_tThDaMS8YzNfiY3SifGsbsV9FvlbbbTusXgKxP4&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;十万獲った十万獲太郎のみなさん&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;最後に集合写真&#34;&gt;最後に集合写真&lt;/h3&gt;


&lt;figure class=&#34;aden&#34;&gt;

    
        &lt;img src=&#34;https://lh3.googleusercontent.com/Mt1XwNMmK6PiNZH5ivcUVr9P9ZXO_QRvF9MC_GQs9S3a05S_Qo5gMP3j4y21_QOMdDcg1zms4TbheTEonWduWZE0biONDY5k6VWQMkXvR7T-QvxCY22I5egvQD-Odpyo46c8qyH_4cs2H1DqugB3DbDIpJnYJTQGvLK42eQYZWyJHSRaOLXWNaU_GK4dyK5KIXcw4O2-jDb_LdH2SZyAtYUIWCfl4GLK99jtHWSbWWcT1dCDQzpeX2ZiErpdIIlmb3w6ELV1-vE3dpdKmgnp6iETxX3utVdO9bWEUM-tXjqu16IeIwPBft57Z7fKnNfMsS6JTh76vEi_xnI2CaM2DAdZctwdE85es1j11QmLv0WGxWPnro866QctWS3TSvi2Fdw9DU6hG7km_mMKoDqzQw9POBM9r8uPOLqxy_RZCub-l5XwA7ZcVjmdRMlrsA5WQjp2PJskdPB7y7EX7-CskXhupnASZ8gavlYfaXkkDmbFpVwpIQLLmOrj_ikls0C3lncVEYwXcvDPrCk9-GyxuKHT3qcgm-asFsAiuoQopOSCpztG0DyY4K9e0wJNlrXQd8Qp5AsGqTfq9RYh31akMXF5oJjY8TE8EfguXQ_XyWWSLbth&#34;  /&gt;
    

    
    &lt;figcaption&gt;
        &lt;h4&gt;集合写真&lt;/h4&gt;
        
    &lt;/figcaption&gt;
      

&lt;/figure&gt;


&lt;h3 id=&#34;参加者の声&#34;&gt;参加者の声&lt;/h3&gt;

&lt;h4 id=&#34;othlohack-2016に参加してどうでしたか&#34;&gt;OthloHack 2016に参加してどうでしたか？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;商品が豪華&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;主催者のお兄さんたちともっと話したかった&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;チーム開発が新鮮で楽しかった！&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;お昼ごはんが豪華&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;悔しかった&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;今後どのようなイベントに参加したいですか&#34;&gt;今後どのようなイベントに参加したいですか？&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;起業家とのトークイベントをやってほしい&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;汎用性の高い技術のハンズオンをやってほしい&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;もくもく会に参加したい&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;デザイナーに特化したイベントをやってほしい&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;おわりに&#34;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;最後になりましたが、参加してくれた学生の皆さまや、ご協賛いただきました企業の皆さまのご支援ご協力あって大成功のイベントになりました。本当にありがとうございました！&lt;br /&gt;
今後ともOthloTechの活動にご期待ください！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OthloEvent#2 @ エイチーム</title>
      <link>http://www.othlo.tech/posts/OthloEvent2/</link>
      <pubDate>Sat, 15 Oct 2016 00:24:57 +0900</pubDate>
      
      <guid>http://www.othlo.tech/posts/OthloEvent2/</guid>
      <description>

&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;

&lt;p&gt;In this tutorial, commands that you enter will start with the &amp;ldquo;$&amp;rdquo; prompt. The output will follow. Lines that start with &amp;ldquo;#&amp;rdquo; are comments that I&amp;rsquo;ve added to explain a point. When I show updates to a file, the &amp;ldquo;:wq&amp;rdquo; on the last line means to save the file.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## this is a comment
$ echo this is a command
this is a command

## edit the file
$vi foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
:wq

## show it
$ cat foo.md
+++
date = &amp;quot;2014-09-28&amp;quot;
title = &amp;quot;creating a new theme&amp;quot;
+++

bah and humbug
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;some-definitions&#34;&gt;Some Definitions&lt;/h2&gt;

&lt;p&gt;There are a few concepts that you need to understand before creating a theme.&lt;/p&gt;

&lt;h3 id=&#34;skins&#34;&gt;Skins&lt;/h3&gt;

&lt;p&gt;Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.&lt;/p&gt;

&lt;p&gt;You have two ways to create a skin. The simplest way is to create it in the &lt;code&gt;layouts/&lt;/code&gt; directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the &lt;code&gt;layouts/&lt;/code&gt; directory so it will always find the skin.&lt;/p&gt;

&lt;p&gt;Your second choice is to create it in a sub-directory of the &lt;code&gt;themes/&lt;/code&gt; directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?&lt;/p&gt;

&lt;p&gt;The difference between creating a skin in &lt;code&gt;layouts/&lt;/code&gt; and creating it in &lt;code&gt;themes/&lt;/code&gt; is very subtle. A skin in &lt;code&gt;layouts/&lt;/code&gt; can’t be customized without updating the templates and static files that it is built from. A skin created in &lt;code&gt;themes/&lt;/code&gt;, on the other hand, can be and that makes it easier for other people to use it.&lt;/p&gt;

&lt;p&gt;The rest of this tutorial will call a skin created in the &lt;code&gt;themes/&lt;/code&gt; directory a theme.&lt;/p&gt;

&lt;p&gt;Note that you can use this tutorial to create a skin in the &lt;code&gt;layouts/&lt;/code&gt; directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.&lt;/p&gt;

&lt;h3 id=&#34;the-home-page&#34;&gt;The Home Page&lt;/h3&gt;

&lt;p&gt;The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.&lt;/p&gt;

&lt;h3 id=&#34;site-configuration-file&#34;&gt;Site Configuration File&lt;/h3&gt;

&lt;p&gt;When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.&lt;/p&gt;

&lt;p&gt;Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your &lt;code&gt;content/&lt;/code&gt; directory and template files in your &lt;code&gt;themes/&lt;/code&gt; directory. It will create HTML files in your &lt;code&gt;public/&lt;/code&gt; directory. You can change this by specifying alternate locations in the configuration file.&lt;/p&gt;

&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;

&lt;p&gt;Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.&lt;/p&gt;

&lt;h4 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h4&gt;

&lt;p&gt;The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “&lt;code&gt;+++&lt;/code&gt;”, YAML by “&lt;code&gt;---&lt;/code&gt;”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.&lt;/p&gt;

&lt;p&gt;The information in the front matter is passed into the template before the content is rendered into HTML.&lt;/p&gt;

&lt;h4 id=&#34;markdown&#34;&gt;Markdown&lt;/h4&gt;

&lt;p&gt;Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.&lt;/p&gt;

&lt;h3 id=&#34;template-files&#34;&gt;Template Files&lt;/h3&gt;

&lt;p&gt;Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&amp;rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.&lt;/p&gt;

&lt;p&gt;There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.&lt;/p&gt;

&lt;p&gt;Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.&lt;/p&gt;

&lt;p&gt;Please note that you can use the front matter to influence Hugo’s choice of templates.&lt;/p&gt;

&lt;h4 id=&#34;single-template&#34;&gt;Single Template&lt;/h4&gt;

&lt;p&gt;A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.&lt;/p&gt;

&lt;h4 id=&#34;list-template&#34;&gt;List Template&lt;/h4&gt;

&lt;p&gt;A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.&lt;/p&gt;

&lt;p&gt;The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.&lt;/p&gt;

&lt;h4 id=&#34;partial-template&#34;&gt;Partial Template&lt;/h4&gt;

&lt;p&gt;A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-site&#34;&gt;Create a New Site&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s use Hugo to create a new web site. I&amp;rsquo;m a Mac user, so I&amp;rsquo;ll create mine in my home directory, in the Sites folder. If you&amp;rsquo;re using Linux, you might have to create the folder first.&lt;/p&gt;

&lt;p&gt;The &amp;ldquo;new site&amp;rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Take a look in the content/ directory to confirm that it is empty.&lt;/p&gt;

&lt;p&gt;The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&amp;rsquo;s a topic for a different tutorial, so please ignore them for now.&lt;/p&gt;

&lt;h3 id=&#34;generate-the-html-for-the-new-site&#34;&gt;Generate the HTML For the New Site&lt;/h3&gt;

&lt;p&gt;Running the &lt;code&gt;hugo&lt;/code&gt; command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&amp;rsquo;s everything that&amp;rsquo;s not content). Since we have an empty site, it won&amp;rsquo;t do much, but it will do it very quickly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &amp;ldquo;&lt;code&gt;--verbose&lt;/code&gt;&amp;rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &amp;ldquo;INFO:&amp;rdquo; or &amp;ldquo;WARN:&amp;rdquo; is present because we used that flag. The lines that start with &amp;ldquo;WARN:&amp;rdquo; are warning messages. We&amp;rsquo;ll go over them later.&lt;/p&gt;

&lt;p&gt;We can verify that the command worked by looking at the directory again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See that new public/ directory? Hugo placed all generated content there. When you&amp;rsquo;re ready to publish your web site, that&amp;rsquo;s the place to start. For now, though, let&amp;rsquo;s just confirm that we have what we&amp;rsquo;d expect from a site with no content.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hugo created two XML files, which is standard, but there are no HTML files.&lt;/p&gt;

&lt;h3 id=&#34;test-the-new-site&#34;&gt;Test the New Site&lt;/h3&gt;

&lt;p&gt;Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &amp;ldquo;server&amp;rdquo; command. If it is successful, you will see output similar to the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content
0 future content
0 pages created
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Connect to the listed URL (it&amp;rsquo;s on the line that starts with &amp;ldquo;Web Server&amp;rdquo;). If everything is working correctly, you should get a page that shows the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;index.xml
sitemap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s a listing of your public/ directory. Hugo didn&amp;rsquo;t create a home page because our site has no content. When there&amp;rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.&lt;/p&gt;

&lt;p&gt;Let’s go back and look at those warnings again.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.&lt;/p&gt;

&lt;p&gt;Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.&lt;/p&gt;

&lt;p&gt;I like that the verbose flag causes Hugo to list the files that it&amp;rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&amp;rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&amp;rsquo;t find a template for the home page and it told you so.&lt;/p&gt;

&lt;p&gt;At this point, you&amp;rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-theme&#34;&gt;Create a New Theme&lt;/h2&gt;

&lt;p&gt;Hugo doesn&amp;rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to create a new theme called &amp;ldquo;zafta.&amp;rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.&lt;/p&gt;

&lt;p&gt;All themes have opinions on content and layout. For example, Zafta uses &amp;ldquo;post&amp;rdquo; over &amp;ldquo;blog&amp;rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.&lt;/p&gt;

&lt;h3 id=&#34;create-a-skeleton&#34;&gt;Create a Skeleton&lt;/h3&gt;

&lt;p&gt;Use the hugo &amp;ldquo;new&amp;rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.&lt;/p&gt;

&lt;p&gt;Please take a minute to fill out the theme.toml and LICENSE.md files. They&amp;rsquo;re optional, but if you&amp;rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&amp;rsquo;s also nice to declare the license so that people will know how they can use the theme.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/theme.toml
author = &amp;quot;michael d henderson&amp;quot;
description = &amp;quot;a minimal working template&amp;quot;
license = &amp;quot;MIT&amp;quot;
name = &amp;quot;zafta&amp;quot;
source_repo = &amp;quot;&amp;quot;
tags = [&amp;quot;tags&amp;quot;, &amp;quot;categories&amp;quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &amp;quot;YOUR_NAME_HERE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that the the skeleton&amp;rsquo;s template files are empty. Don&amp;rsquo;t worry, we&amp;rsquo;ll be changing that shortly.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-the-configuration-file-to-use-the-theme&#34;&gt;Update the Configuration File to Use the Theme&lt;/h3&gt;

&lt;p&gt;Now that we&amp;rsquo;ve got a theme to work with, it&amp;rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &amp;ldquo;-t zafta&amp;rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&amp;rsquo;t put it in the configuration file or specify it on the command line, you won&amp;rsquo;t use the template that you&amp;rsquo;re expecting to.&lt;/p&gt;

&lt;p&gt;Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi config.toml
theme = &amp;quot;zafta&amp;quot;
baseurl = &amp;quot;&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;zafta - totally refreshing&amp;quot;
MetaDataFormat = &amp;quot;toml&amp;quot;
:wq

$
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OthloHack 2016</title>
      <link>http://www.othlo.tech/posts/OthloHack2016/</link>
      <pubDate>Thu, 13 Oct 2016 00:20:33 +0900</pubDate>
      
      <guid>http://www.othlo.tech/posts/OthloHack2016/</guid>
      <description>

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;

&lt;h2 id=&#34;introduction-to-go-templates&#34;&gt;Introduction to Go Templates&lt;/h2&gt;

&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;

&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;

&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;

&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;http://www.othlo.tech/layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;

&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;

&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;http://www.othlo.tech/layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;includes&#34;&gt;Includes&lt;/h2&gt;

&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logic&#34;&gt;Logic&lt;/h2&gt;

&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;

&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;

&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ range array }}
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $element := array}}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }}
    {{ $element }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;conditionals&#34;&gt;Conditionals&lt;/h3&gt;

&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;

&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }}
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pipes&#34;&gt;Pipes&lt;/h2&gt;

&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;

&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;

&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is the same as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Could be rewritten as&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;Context (aka. the dot)&lt;/h2&gt;

&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize | lower  }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;

&lt;h1 id=&#34;hugo-parameters&#34;&gt;Hugo Parameters&lt;/h1&gt;

&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;

&lt;h2 id=&#34;using-content-page-parameters&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;

&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;http://www.othlo.tech/content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;

&lt;p&gt;Here is the example front matter:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;using-site-config-parameters&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;

&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;

&lt;p&gt;For instance, you might declare:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;params:
  CopyrightHTML: &amp;quot;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;quot;
  TwitterUser: &amp;quot;spf13&amp;quot;
  SidebarRecentLimit: 5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>